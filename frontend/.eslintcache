[{"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js":"1","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js":"2","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js":"3","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js":"4","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js":"5","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js":"6","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js":"7","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js":"8","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js":"9","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js":"10","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/card/Card.js":"11","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js":"12","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"13","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js":"14","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js":"15"},{"size":2045,"mtime":1611209093256,"results":"16","hashOfConfig":"17"},{"size":7283,"mtime":1611554368933,"results":"18","hashOfConfig":"17"},{"size":1573,"mtime":1611138470779,"results":"19","hashOfConfig":"17"},{"size":4452,"mtime":1611554368922,"results":"20","hashOfConfig":"17"},{"size":4220,"mtime":1611381834933,"results":"21","hashOfConfig":"17"},{"size":510,"mtime":1610813236017,"results":"22","hashOfConfig":"17"},{"size":362,"mtime":1608437953724,"results":"23","hashOfConfig":"17"},{"size":175,"mtime":1611386511945,"results":"24","hashOfConfig":"17"},{"size":5000,"mtime":1611554368927,"results":"25","hashOfConfig":"17"},{"size":2124,"mtime":1611386889004,"results":"26","hashOfConfig":"17"},{"size":6057,"mtime":1611548390255,"results":"27","hashOfConfig":"17"},{"size":3080,"mtime":1611554368930,"results":"28","hashOfConfig":"17"},{"size":5609,"mtime":1611547058551,"results":"29","hashOfConfig":"17"},{"size":1708,"mtime":1611381834940,"results":"30","hashOfConfig":"17"},{"size":2727,"mtime":1611547575917,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1g4yv82",{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js",["71","72"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport client from \"./client\";\nimport Accountinterface from \"./container/accountinterface/accountinterface\";\nimport Uploadimagetest from \"./container/uploadimagetest/uploadimagetest\"; //用不到\n\nimport Loginpage from \"./container/login/loginipage/loginpage\";\nimport Signuppage from \"./container/login/signuppage/signuppage\";\nimport Chatscreen from \"./container/chatscreen/chatscreen\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Card from \"./container/card/Card\";\n\nfunction App() {\n    const [user, setUser] = useState({});\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setAppUser\": {\n                console.log(\"set user\");\n                setUser(payload[0]);\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/chats\">\n                        <Header mode=\"chat\" backButton=\"/\" />\n                        <Chatscreen />\n                    </Route>\n                    <Route path=\"/accounts\">\n                        <Header mode=\"account\" backButton=\"/\" userID={user.id} />\n                        <Accountinterface user={user} />\n                    </Route>\n\n                    <Route exact path=\"/\">\n                        <Header mode=\"main\" backButton=\"\" userID={user.id} />\n                        <Card userID={user.id} />\n                    </Route>\n\n                    <Route exact path=\"/loginpage\">\n                        <Loginpage />\n                    </Route>\n\n                    <Route exact path=\"/signuppage\">\n                        <Signuppage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n",["73","74"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js",["75","76","77","78","79","80"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js",["81","82","83"],"import { set } from 'mongoose';\nimport {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useLoginForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_login\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n\n            if (msg===\"Welcome\"){\n              setToHomePage(true)\n            }\n\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserLogin = (userinfo)=> {\n    let { id, password} = userinfo;\n    let userdata={  \"id\":id, \"password\": password}\n    sendData(  [\"userLogin\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs)\n    sendUserLogin(inputs)\n    setInputs(initialValues)\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  \n  return {\n    handleSubmit,\n    handleInputChange, \n    inputs,\n    toHomePage\n  };\n}\nexport default useLoginForm;","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js",["84","85"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js",["86","87"],"import React, { useEffect, useState } from \"react\";\nimport \"./Header.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\"; //account button\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\"; //chat button\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\"; //return button\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\"; //return button\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\"; //main page button\nimport { Link, useHistory } from \"react-router-dom\";\nimport client from \"./client\";\n\nfunction Header({ mode, backButton, userID }) {\n    console.log(\"header: user\", userID);\n    const history = useHistory();\n    const [user, setUser] = useState({ id: userID });\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"initHeader\": {\n                console.log(\"init header user\", payload);\n                setUser(() => payload);\n                break;\n            }\n            case \"Accountsettup\": {\n                console.log(\"In Header\");\n                console.log(\"Accountsettup\");\n                console.log(payload[0]);\n                //setUser({ id: payload.id });\n                setUser(payload[0]);\n                break;\n            }\n            case \"initCard\": {\n                //setPeople(() => payload);\n                console.log(\"Header accept\");\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    var reloadMain = () => {\n        sendData([\"getUser\", { userID: user.id }]);\n        sendData([\"getCards\", { userID: user.id }]);\n    };\n    var reloadAccountinterface = async () => {\n        await sendData([\"getUser\", { userID: user.id }]);\n        await sendData([\"Accountinterface_getUser\", { userID: user.id }]);\n    };\n    return (\n        <>\n            <div className=\"header\">\n                {mode === \"chat\" ? (\n                    <IconButton\n                        onClick={() => {\n                            history.replace(backButton);\n                            reloadMain();\n                        }}\n                    >\n                        <ArrowBackIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/accounts\">\n                        <IconButton onClick={() => sendData([\"Accountinterface_getUser\", { userID: user.id }])}>\n                            {\" \"}\n                            {/* 我的db裡有891206的id*/}\n                            <AccountCircleOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                        </IconButton>\n                    </Link>\n                )}\n\n                <Link to=\"/\">\n                    <IconButton onClick={() => reloadMain()}>\n                        <FavoriteTwoToneIcon style={{ fontSize: 45 }} color=\"secondary\" className=\"header__logo\" />\n                    </IconButton>\n                </Link>\n\n                {mode === \"account\" ? (\n                    <IconButton\n                        onClick={() => {\n                            history.replace(backButton);\n                            reloadMain();\n                        }}\n                    >\n                        <ArrowForwardIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/chats\">\n                        <IconButton\n                            onClick={() => {\n                                sendData([\"chat_getUser\", { userID: user.id }]);\n                            }}\n                        >\n                            <ForumOutlinedIcon className=\"header__icon\" fontSize=\"large\" />\n                        </IconButton>\n                    </Link>\n                )}\n            </div>\n            <p>{userID}</p>\n        </>\n    );\n}\n\nexport default Header;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js",["88","89","90","91","92"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js",["93","94","95","96","97"],"import { useCallback, useState, useRef, useEffect } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\nimport client from \"../../client\";\n\nfunction Userinfo() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [filedata, setFiledata] = useState(null);\n\n    const selectfilebtnRef = useRef({});\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    const sendFile = (file) => {\n        // actually send image\n        sendData([\"sendfile\", file]);\n    };\n\n    const fileselectedHandler = async (event) => {\n        //console.log(event.target.files[0])\n        //setSelectedFile(event.target.files[0])\n        event.preventDefault();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () => {\n            setSelectedFile(file);\n            setFiledata(reader.result);\n        };\n        reader.readAsDataURL(file);\n    };\n\n    const testclick = () => {\n        selectfilebtnRef.current.click();\n        console.log(\"clicks\");\n    };\n\n    const fileUploadHandler = () => {\n        console.log(\"Filedata: \", filedata);\n        //console.log(selectedFile)\n        //console.log(\"clicks\")\n        if (!filedata) {\n            console.log(\"filedata not found\");\n            return;\n        }\n        sendFile({ filedata: filedata });\n        console.log(\"done\");\n        setSelectedFile(null);\n        setFiledata(null);\n        selectfilebtnRef.current.value = null;\n    };\n\n    return (\n        <div className=\"App-userinfo\">\n            <input\n                style={{ display: \"none\" }}\n                type=\"file\"\n                onChange={(e) => fileselectedHandler(e)}\n                ref={selectfilebtnRef}\n            />\n\n            <button onClick={testclick}>Pick files </button>\n            <button onClick={fileUploadHandler}>Upload </button>\n\n            {filedata ? <img src={filedata} className=\"rounded mx-auto d-block\" alt=\"figure\" /> : null}\n        </div>\n    );\n}\n\nexport default Userinfo;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/card/Card.js",["98","99","100","101","102","103","104","105","106"],"import React, { useEffect, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Card.css\";\nimport client from \"../../client\";\nimport { Link } from \"react-router-dom\";\n\nconst alreadyRemoved = new Set();\nvar isLogin = false;\n\nconst Card = ({ userID }) => {\n    const [people, setPeople] = useState([]);\n    const [likedBy, setLikedBy] = useState([]);\n    const [like, setLike] = useState([]);\n    const [user, setUser] = useState({ id: userID });\n    alreadyRemoved.add(user.id);\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onopen = () => sendData([\"getCards\", { userID: user.id }]);\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setCardUser\": {\n                if (payload[0] !== undefined) {\n                    //console.log(\"set user\", payload[0].id);\n                    isLogin = true;\n                    setUser({ id: payload[0].id });\n                    setLike(payload[0].like);\n                    setLikedBy(payload[0].likedBy);\n                    sendData([\"getCards\", { userID: payload[0].id }]);\n                    sendData([\"initHeader\", { userID: payload[0].id }]);\n                    break;\n                }\n            }\n            case \"initCard\": {\n                setPeople(() => payload);\n                //console.log(\"Card accept init card\");\n                break;\n            }\n            case \"likeList\": {\n                setLike(() => payload);\n                break;\n            }\n            case \"likedByList\": {\n                setLikedBy(() => payload);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    const outOfFrame = (id) => {\n        console.log(id + \" left the screen!\");\n    };\n\n    const swiped = (direction, idToDelete) => {\n        console.log(\"removing: \" + idToDelete);\n        alreadyRemoved.add(idToDelete);\n        console.log(alreadyRemoved);\n        if (direction === \"left\") {\n            addDislike(idToDelete);\n        }\n        if (direction === \"right\") {\n            //if (likedBy.includes(idToDelete)) console.log(\"match!\");\n            addLike(idToDelete);\n        }\n    };\n\n    const swipe = (dir) => {\n        const cardsLeft = people.filter((person) => !alreadyRemoved.has(person.name));\n        if (cardsLeft.length) {\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].id; // Find the card object to be removed\n            const index = people.map((person) => person.id).indexOf(toBeRemoved); // Find the index of which to make the reference to\n            alreadyRemoved.add(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n        }\n    };\n\n    const addLike = (id) => {\n        //swipe(\"right\");\n        sendData([\"like\", { userID: user.id, id: id }]);\n    };\n\n    const addDislike = (id) => {\n        //swipe(\"left\");\n        sendData([\"dislike\", { userID: user.id, id: id }]);\n    };\n\n    /*\n    const SwipeButtons = () => {\n        return (\n            <div className=\"swipeButtons\">\n                <IconButton className=\"swipeButtons__left\" onClick={swipe(\"left\")}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton className=\"swipeButtons__right\" onClick={swipe(\"right\")}>\n                    <FavoriteIcon fontSize=\"large\" />\n                </IconButton>\n            </div>\n        );\n    };\n    */\n\n    return (\n        <div>\n            {isLogin ? (\n                <div className=\"cardContainer\">\n                    {people.length !== alreadyRemoved.length ? (\n                        <>\n                            <div className=\"info\">\n                                <h3>Loading...</h3>\n                            </div>\n                            {people.map((person) =>\n                                alreadyRemoved.has(person.id) ? null : (\n                                    <TinderCard\n                                        className=\"swipe\"\n                                        key={person.id}\n                                        onSwipe={(dir) => swiped(dir, person.id)}\n                                        preventSwipe={[\"up\", \"down\"]}\n                                        onCardLeftScreen={() => outOfFrame(person.id)}\n                                    >\n                                        <div\n                                            style={{\n                                                backgroundImage: person.photo\n                                                    ? `url(${person.photo})`\n                                                    : `url(https://i.pinimg.com/originals/7a/98/1d/7a981de80cfa0a7aa92f5d523d3509cc.jpg)`,\n                                            }}\n                                            className=\"card\"\n                                        >\n                                            <h3>{person.name}</h3>\n                                        </div>\n                                    </TinderCard>\n                                )\n                            )}\n                        </>\n                    ) : (\n                        <div className=\"info\">\n                            <h3>no other user left...</h3>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div className=\"card-box\">\n                    <h3>PLEASE LOGIN!!</h3>\n                    <br></br>\n                    <Link to=\"/loginpage\">\n                        <button className=\"btn-one\" type=\"submit\">\n                            Login\n                        </button>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js",["107","108","109","110"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["111","112","113","114","115","116","117","118","119","120","121","122"],"import { useCallback, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nimport \"./accountinterface.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport Userinfo from \"./userinfo\";\n\n//const client = new WebSocket(\"ws://localhost:4000\");\nimport client from \"../../client\";\n\nvar isLogin = false;\n\nfunction Accountinterface(props) {\n    const [imagebuffer, setImagebuffer] = useState(null);\n    const [testid, setTestid] = useState(\"00000000\"); //for broadcasttest\n    //const [user,setUser] = useState({id:\"\",name:\"\",photo:\"\",sex:\"\",password:\"\"})\n    const [user, setUser] = useState(props.user);\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"Accountinterface_setUser\": {\n                isLogin = true;\n                console.log(\"receive: Accountinterface_setUser\");\n                //console.log(payload);\n                //console.log(payload[0]._id);\n\n                //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n                setUser(payload[0]);\n                sendData([\"initHeader\", { userID: payload[0].id }]);\n\n                break;\n            }\n            // case \"Accountinterface_updateUser\": {\n            //     console.log(\"receive: Accountinterface_updateUser\");\n            //     //console.log(payload)// is old one\n            //     const { _id } = payload;\n\n            //     //sendData(['Accountinterface_getUser',{ userID: }])\n\n            //     //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\n            //     //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n\n            //     //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n            //     //setUser(payload[0])\n\n            //     break;\n            // }\n            case \"Image\": {\n                console.log(\"receive: Image\");\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\n                setImagebuffer(imagebuffer);\n\n                break;\n            }\n            case `broadcast${testid}`: {\n                console.log(`receive: broadcast${testid}`);\n                const { id, body } = payload;\n                console.log(payload);\n\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n\n    const sendtest = () => {\n        //console.log('sendtest: { id: \"fromid\", body:\"testbody\"}')\n        //console.log('sendtest: { userID: \"891206\"}');\n        sendData([\"Accountinterface_getUser\", { userID: user.id }]);\n    };\n    // const sendtest2 = () => {\n    //     console.log('sendtest2: { id: \"fromid\", body:\"testbody\"}')\n    //     sendData(['sendtest',{ id: testid, body:\"testbody\"}])\n    // }\n\n    // var Hi_url = \"60040f3741ef153e7cd5e71f\";\n    // //sendData(['getImageByID',{_id: Hi_url}])\n    // const getphoto = async () => {\n    //     sendData([\"getImageByID\", { ImageID: Hi_url }]);\n    //     console.log(imagebuffer);\n    // };\n\n    return (\n        <div>\n            {isLogin ? (\n                <div className=\"App-accountinterface card-box\">\n                    <div className=\"profile\">\n                        {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\n                    </div>\n                    <br></br>\n                    <Userinfo user={user} />\n                    <br></br>\n                </div>\n            ) : (\n                <div className=\"card-box\">\n                    <h3>PLEASE LOGIN!!</h3>\n                    <br></br>\n                    <Link to=\"/loginpage\">\n                        <button className=\"btn-one\" type=\"submit\">\n                            Login\n                        </button>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Accountinterface;\n\n// <div className=\"settinglist\">\n// <ul className=\"todo-app__list\" id=\"todo-list\">\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Name\n//             </h1>\n//             <h2> {user.name}</h2>\n//             <Link to=\"/\">\n//                 <IconButton>\n//                     <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\n//                 </IconButton>\n//             </Link>\n\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Sex\n//             </h1>\n//             <h2> {user.sex}</h2>\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 ID\n//             </h1>\n//             <h2> {user.id}</h2>\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Password\n//             </h1>\n//             <h2> {user.password}</h2>\n//     </li>\n\n// </ul>\n// </div>\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js",["123","124","125","126","127"],"import { useState } from \"react\";\n// import { w3cwebsocket as W3CWebSocket } from 'websocket'\n\n// const client = new W3CWebSocket('ws://localhost:4000')\nconst client = new WebSocket(\"ws://localhost:4000\");\n\nconst useChat = (User) => {\n    const [user, setUser] = useState(User);\n    const [messages, setMessages] = useState([]);\n    const [status, setStatus] = useState({});\n    const [opened, setOpened] = useState(false);\n\n    // const chatuser1 = { id:\"3\"}\n    // const chatuser2 = { id:\"891206\"}\n    // const chatuser3 = { id: \"123\"}\n\n    //const [fromId, setFromId] = useState(user.id);\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n        //console.log(task, payload)\n        switch (task) {\n            case \"status\": {\n                setStatus(payload);\n                //console.log('status')\n                break;\n            }\n            case \"cleared\": {\n                //console.log('cleared')\n                setMessages([]);\n                break;\n            }\n\n            default:\n                break;\n        }\n    };\n\n    const sendData = (data) => {\n        // TODO\n        client.send(JSON.stringify(data));\n    };\n\n    const sendMessage = (msg) => {\n        sendData([\"messageInput\", msg]);\n    };\n\n    //console.log('frontend intoChat 1')\n    client.onopen = () => {\n        //console.log('frontend intoChat 2')\n        setOpened(true);\n        sendData([\"intoChat\", { msg: \"intoChatInit\" }]);\n    };\n\n    const clearMessages = () => {\n        // TODO\n        client.send(JSON.stringify([\"clear\", \"\"]));\n    };\n\n    return {\n        status,\n\n        clearMessages,\n    };\n};\n\nexport default useChat;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js",["128","129","130","131"],"import { useState, useRef } from \"react\";\nimport client from \"../../../client\";\n\nconst useSignUpForm = (initialValues, callback) => {\n    const [inputs, setInputs] = useState(initialValues);\n    const [photo, setPhoto] = useState(null);\n    const [photodata, setPhotodata] = useState(null);\n    const [toHomePage, setToHomePage] = useState(false);\n\n    const [selectsex, setSelectsex] = useState(\"male\");\n    const [selectsexes, setSelectsexes] = useState([\"none\", \"male\", \"female\"]);\n\n    const handleSelectsexChange = (value) => {\n        setSelectsex(value);\n    };\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"response_for_signup\": {\n                const { msg } = payload;\n                console.log(msg);\n                alert(`${msg}`);\n                // if(msg===\"Sign up sucessfully\"){\n                //   console.log(\"here\")\n                //   setInputs(initialValues)\n                //   setPhoto(null)\n                //   setPhotodata(null)\n                // }\n                if (msg === \"Sign up sucessfully\") {\n                    setToHomePage(true);\n                }\n                break;\n            }\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    const sendUserSignup = (userinfo, photodata) => {\n        let { Name, Sex, id, password1 } = userinfo;\n        let userdata = { name: Name, sex: selectsex, id: id, password: password1, photodata: photodata };\n        sendData([\"setUser\", userdata]);\n    };\n\n    const handleSubmit = async (event) => {\n        if (event) event.preventDefault();\n        callback();\n        console.log(inputs, photodata);\n\n        // await searchid(inputs.id);\n\n        sendUserSignup(inputs, photodata);\n\n        //console.log(\"her777777e\");\n        setInputs(initialValues);\n        setPhoto(null);\n        setPhotodata(null);\n    };\n    const handleInputChange = (event) => {\n        event.persist();\n        setInputs((inputs) => ({ ...inputs, [event.target.name]: event.target.value }));\n    };\n    const handlePhotoInputChange = (event) => {\n        event.persist();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () => {\n            setPhoto(file);\n            setPhotodata(reader.result);\n        };\n        reader.readAsDataURL(file);\n    };\n    return {\n        handleSubmit,\n        handleInputChange,\n        handlePhotoInputChange,\n        handleSelectsexChange,\n        selectsex,\n        selectsexes,\n        inputs,\n        photo,\n        photodata,\n        toHomePage,\n    };\n};\nexport default useSignUpForm;\n",{"ruleId":"132","severity":1,"message":"133","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":12,"column":50,"nodeType":"134","messageId":"135","endLine":12,"endColumn":54},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"132","severity":1,"message":"141","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"142","line":4,"column":16,"nodeType":"134","messageId":"135","endLine":4,"endColumn":26},{"ruleId":"132","severity":1,"message":"143","line":16,"column":9,"nodeType":"134","messageId":"135","endLine":16,"endColumn":14},{"ruleId":"132","severity":1,"message":"144","line":19,"column":9,"nodeType":"134","messageId":"135","endLine":19,"endColumn":18},{"ruleId":"132","severity":1,"message":"145","line":27,"column":11,"nodeType":"134","messageId":"135","endLine":27,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":153,"column":1,"nodeType":"148","messageId":"149","endLine":160,"endColumn":2},{"ruleId":"132","severity":1,"message":"150","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"151","line":2,"column":19,"nodeType":"134","messageId":"135","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":14,"column":5,"nodeType":"154","messageId":"155","endLine":32,"endColumn":6},{"ruleId":"132","severity":1,"message":"136","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"142","line":5,"column":16,"nodeType":"134","messageId":"135","endLine":5,"endColumn":26},{"ruleId":"132","severity":1,"message":"156","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"157","line":51,"column":9,"nodeType":"134","messageId":"135","endLine":51,"endColumn":31},{"ruleId":"132","severity":1,"message":"156","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"158","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":15},{"ruleId":"132","severity":1,"message":"159","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":16},{"ruleId":"132","severity":1,"message":"160","line":4,"column":25,"nodeType":"134","messageId":"135","endLine":4,"endColumn":32},{"ruleId":"161","severity":1,"message":"162","line":65,"column":13,"nodeType":"163","messageId":"164","endLine":69,"endColumn":14},{"ruleId":"132","severity":1,"message":"165","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":21},{"ruleId":"132","severity":1,"message":"156","line":1,"column":41,"nodeType":"134","messageId":"135","endLine":1,"endColumn":50},{"ruleId":"132","severity":1,"message":"166","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"132","severity":1,"message":"167","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":27},{"ruleId":"132","severity":1,"message":"168","line":8,"column":12,"nodeType":"134","messageId":"135","endLine":8,"endColumn":24},{"ruleId":"132","severity":1,"message":"156","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"169","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":17},{"ruleId":"132","severity":1,"message":"170","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":20},{"ruleId":"132","severity":1,"message":"166","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":18},{"ruleId":"132","severity":1,"message":"171","line":15,"column":12,"nodeType":"134","messageId":"135","endLine":15,"endColumn":19},{"ruleId":"132","severity":1,"message":"172","line":16,"column":12,"nodeType":"134","messageId":"135","endLine":16,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":41,"column":13,"nodeType":"163","messageId":"164","endLine":45,"endColumn":14},{"ruleId":"132","severity":1,"message":"173","line":76,"column":11,"nodeType":"134","messageId":"135","endLine":76,"endColumn":16},{"ruleId":"132","severity":1,"message":"174","line":80,"column":19,"nodeType":"134","messageId":"135","endLine":80,"endColumn":24},{"ruleId":"132","severity":1,"message":"141","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"151","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"142","line":4,"column":16,"nodeType":"134","messageId":"135","endLine":4,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":69,"column":1,"nodeType":"148","messageId":"149","endLine":76,"endColumn":2},{"ruleId":"132","severity":1,"message":"165","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":21},{"ruleId":"132","severity":1,"message":"156","line":1,"column":33,"nodeType":"134","messageId":"135","endLine":1,"endColumn":42},{"ruleId":"132","severity":1,"message":"142","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"175","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"132","severity":1,"message":"166","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":18},{"ruleId":"132","severity":1,"message":"167","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":27},{"ruleId":"132","severity":1,"message":"176","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":30},{"ruleId":"132","severity":1,"message":"177","line":17,"column":12,"nodeType":"134","messageId":"135","endLine":17,"endColumn":23},{"ruleId":"132","severity":1,"message":"178","line":18,"column":20,"nodeType":"134","messageId":"135","endLine":18,"endColumn":29},{"ruleId":"132","severity":1,"message":"179","line":70,"column":25,"nodeType":"134","messageId":"135","endLine":70,"endColumn":27},{"ruleId":"132","severity":1,"message":"180","line":70,"column":29,"nodeType":"134","messageId":"135","endLine":70,"endColumn":33},{"ruleId":"132","severity":1,"message":"181","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":19},{"ruleId":"132","severity":1,"message":"182","line":8,"column":12,"nodeType":"134","messageId":"135","endLine":8,"endColumn":16},{"ruleId":"132","severity":1,"message":"183","line":8,"column":18,"nodeType":"134","messageId":"135","endLine":8,"endColumn":25},{"ruleId":"132","severity":1,"message":"184","line":9,"column":12,"nodeType":"134","messageId":"135","endLine":9,"endColumn":20},{"ruleId":"132","severity":1,"message":"185","line":11,"column":12,"nodeType":"134","messageId":"135","endLine":11,"endColumn":18},{"ruleId":"132","severity":1,"message":"186","line":45,"column":11,"nodeType":"134","messageId":"135","endLine":45,"endColumn":22},{"ruleId":"132","severity":1,"message":"151","line":1,"column":20,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"187","line":11,"column":25,"nodeType":"134","messageId":"135","endLine":11,"endColumn":39},{"ruleId":"152","severity":1,"message":"153","line":21,"column":9,"nodeType":"154","messageId":"155","endLine":37,"endColumn":10},{"ruleId":"132","severity":1,"message":"188","line":44,"column":21,"nodeType":"134","messageId":"135","endLine":44,"endColumn":24},"no-unused-vars","'Uploadimagetest' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'photo' is assigned a value but never used.","'selectsex' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'set' is defined but never used.","'useRef' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","'reloadAccountinterface' is assigned a value but never used.","'useChat' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useCallback' is defined but never used.","'IconButton' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'selectedFile' is assigned a value but never used.","'CloseIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'likedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'swipe' is assigned a value but never used.","'index' is assigned a value but never used.","'Redirect' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'imagebuffer' is assigned a value but never used.","'setTestid' is assigned a value but never used.","'id' is assigned a value but never used.","'body' is assigned a value but never used.","'sendtest' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'messages' is assigned a value but never used.","'opened' is assigned a value but never used.","'sendMessage' is assigned a value but never used.","'setSelectsexes' is assigned a value but never used.","'Sex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]