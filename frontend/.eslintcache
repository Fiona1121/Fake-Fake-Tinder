[{"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js":"1","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js":"2","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js":"3","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js":"4","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Card.js":"5","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js":"6","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"7","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/userinfo/userinfo.js":"8"},{"size":362,"mtime":1608437953724,"results":"9","hashOfConfig":"10"},{"size":1259,"mtime":1610941220488,"results":"11","hashOfConfig":"10"},{"size":510,"mtime":1610813236017,"results":"12","hashOfConfig":"10"},{"size":2152,"mtime":1610941220409,"results":"13","hashOfConfig":"10"},{"size":4510,"mtime":1610970669949,"results":"14","hashOfConfig":"10"},{"size":138,"mtime":1610870671246,"results":"15","hashOfConfig":"10"},{"size":1963,"mtime":1610955025664,"results":"16","hashOfConfig":"10"},{"size":2128,"mtime":1610941220411,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2lr92w",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js",[],["39","40"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js",["41"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js",[],["42","43"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js",["44"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Card.js",["45","46","47","48","49","50","51","52"],"import React, { useMemo, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Card.css\";\nimport client from \"./client\";\n\nconst Card = () => {\n    const [people, setPeople] = useState([]);\n    const [likedBy, setLikedBy] = useState([]);\n    const [like, setLike] = useState([]);\n    const [status, setStatus] = useState({});\n    const [lastDirection, setLastDirection] = useState();\n    const alreadyRemoved = [];\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"initCard\": {\n                setPeople(() => payload);\n                break;\n            }\n            case \"updateCard\": {\n                setPeople(() => [...people, ...payload]);\n                break;\n            }\n            case \"status\": {\n                setStatus(payload);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    const outOfFrame = (id) => {\n        console.log(id + \" left the screen!\");\n    };\n\n    const swiped = (direction, idToDelete) => {\n        console.log(\"removing: \" + idToDelete);\n        setLastDirection(direction);\n        alreadyRemoved.push(idToDelete);\n        console.log(alreadyRemoved);\n        if (direction === \"left\") {\n            addDislike(idToDelete);\n        }\n        if (direction === \"right\") {\n            addLike(idToDelete);\n        }\n    };\n\n    const swipe = (dir) => {\n        const cardsLeft = people.filter((person) => !alreadyRemoved.includes(person.name));\n        if (cardsLeft.length) {\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].id; // Find the card object to be removed\n            const index = people.map((person) => person.id).indexOf(toBeRemoved); // Find the index of which to make the reference to\n            alreadyRemoved.push(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n        }\n    };\n\n    const addLike = (id) => {\n        swipe(\"right\");\n        sendData([\"like\", id]);\n    };\n\n    const addDislike = (id) => {\n        swipe(\"left\");\n        sendData([\"dislike\", id]);\n    };\n\n    const SwipeButtons = () => {\n        return (\n            <div className=\"swipeButtons\">\n                <IconButton className=\"swipeButtons__left\" onClick={swipe(\"left\")}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton className=\"swipeButtons__right\" onClick={swipe(\"right\")}>\n                    <FavoriteIcon fontSize=\"large\" />\n                </IconButton>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"cardContainer\">\n                {people ? (\n                    people.map((person) =>\n                        alreadyRemoved.includes(person) ? (\n                            console.log(\"skip\")\n                        ) : (\n                            <TinderCard\n                                className=\"swipe\"\n                                key={person.name}\n                                onSwipe={(dir) => swiped(dir, person.id)}\n                                preventSwipe={[\"up\", \"down\"]}\n                                onCardLeftScreen={() => outOfFrame(person.id)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: person.photo\n                                            ? `url(${person.photo})`\n                                            : `url(https://i.pinimg.com/originals/7a/98/1d/7a981de80cfa0a7aa92f5d523d3509cc.jpg)`,\n                                    }}\n                                    className=\"card\"\n                                >\n                                    <h3>{person.name}</h3>\n                                </div>\n                            </TinderCard>\n                        )\n                    )\n                ) : (\n                    <h3>no other user left...</h3>\n                )}\n            </div>\n            <div className=\"swipeButtonContainer\">\n                <SwipeButtons />\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["53","54","55","56"],"import { useCallback, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\n\nconst client = new WebSocket(\"ws://localhost:4000\");\n\nfunction Accountinterface() {\n    const [imagebuffer, setImagebuffer] = useState(null);\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"Image\": {\n                console.log(\"receive: Image\");\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\n                setImagebuffer(imagebuffer);\n\n                break;\n            }\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    var Hi_url = \"60040f3741ef153e7cd5e71f\";\n    //sendData(['getImageByID',{_id: Hi_url}])\n    const getphoto = async () => {\n        sendData([\"getImageByID\", { ImageID: Hi_url }]);\n        console.log(imagebuffer);\n    };\n\n    return (\n        <div className=\"App-accountinterface\">\n            <div className=\"profile\">\n                {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\n            </div>\n            <div className=\"setting\">\n                <Link to=\"/userinfo\">\n                    <IconButton>\n                        <SettingsRoundedIcon style={{ fontSize: 40 }} className=\"header__logo\" />\n                    </IconButton>\n                </Link>\n                {imagebuffer ? (\n                    <img src={imagebuffer} className=\"rounded mx-auto d-block\" alt=\"figure\" />\n                ) : (\n                    <p>imagebuffer is null</p>\n                )}\n            </div>\n\n            <button onClick={getphoto}> get photo</button>\n        </div>\n    );\n}\n\nexport default Accountinterface;\n",["57","58"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/userinfo/userinfo.js",["59","60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":8,"column":50,"nodeType":"70","messageId":"71","endLine":8,"endColumn":54},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","severity":1,"message":"74","line":14,"column":8,"nodeType":"70","messageId":"71","endLine":14,"endColumn":27},{"ruleId":"68","severity":1,"message":"75","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":24},{"ruleId":"68","severity":1,"message":"76","line":11,"column":12,"nodeType":"70","messageId":"71","endLine":11,"endColumn":19},{"ruleId":"68","severity":1,"message":"77","line":11,"column":21,"nodeType":"70","messageId":"71","endLine":11,"endColumn":31},{"ruleId":"68","severity":1,"message":"78","line":12,"column":12,"nodeType":"70","messageId":"71","endLine":12,"endColumn":16},{"ruleId":"68","severity":1,"message":"79","line":12,"column":18,"nodeType":"70","messageId":"71","endLine":12,"endColumn":25},{"ruleId":"68","severity":1,"message":"80","line":13,"column":12,"nodeType":"70","messageId":"71","endLine":13,"endColumn":18},{"ruleId":"68","severity":1,"message":"81","line":14,"column":12,"nodeType":"70","messageId":"71","endLine":14,"endColumn":25},{"ruleId":"68","severity":1,"message":"82","line":64,"column":19,"nodeType":"70","messageId":"71","endLine":64,"endColumn":24},{"ruleId":"68","severity":1,"message":"83","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":21},{"ruleId":"68","severity":1,"message":"84","line":1,"column":33,"nodeType":"70","messageId":"71","endLine":1,"endColumn":42},{"ruleId":"68","severity":1,"message":"85","line":2,"column":16,"nodeType":"70","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":16,"column":9,"nodeType":"88","messageId":"89","endLine":24,"endColumn":10},{"ruleId":"64","replacedBy":"90"},{"ruleId":"66","replacedBy":"91"},{"ruleId":"68","severity":1,"message":"83","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":21},{"ruleId":"68","severity":1,"message":"84","line":1,"column":41,"nodeType":"70","messageId":"71","endLine":1,"endColumn":50},{"ruleId":"68","severity":1,"message":"92","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":18},{"ruleId":"68","severity":1,"message":"74","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":27},{"ruleId":"68","severity":1,"message":"93","line":9,"column":12,"nodeType":"70","messageId":"71","endLine":9,"endColumn":24},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["94"],["95"],"'SettingsRoundedIcon' is defined but never used.","'useMemo' is defined but never used.","'likedBy' is assigned a value but never used.","'setLikedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'setLike' is assigned a value but never used.","'status' is assigned a value but never used.","'lastDirection' is assigned a value but never used.","'index' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["94"],["95"],"'IconButton' is defined but never used.","'selectedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]