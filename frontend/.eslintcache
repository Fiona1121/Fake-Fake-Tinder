[{"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/index.js":"1","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/App.js":"2","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/reportWebVitals.js":"3","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Header.js":"4","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"5","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/client.js":"6","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js":"7","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js":"8","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js":"9","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js":"10","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js":"11","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js":"12","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/card/Card.js":"13","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js":"14","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js":"15"},{"size":510,"mtime":1611154142972,"results":"16","hashOfConfig":"17"},{"size":2433,"mtime":1611166025283,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611154038473,"results":"19","hashOfConfig":"17"},{"size":3314,"mtime":1611166403056,"results":"20","hashOfConfig":"17"},{"size":5671,"mtime":1611165995239,"results":"21","hashOfConfig":"17"},{"size":138,"mtime":1611154142969,"results":"22","hashOfConfig":"17"},{"size":4676,"mtime":1611197719612,"results":"23","hashOfConfig":"17"},{"size":1785,"mtime":1611173437422,"results":"24","hashOfConfig":"17"},{"size":6967,"mtime":1611165995240,"results":"25","hashOfConfig":"17"},{"size":3080,"mtime":1611154293789,"results":"26","hashOfConfig":"17"},{"size":2432,"mtime":1611165995240,"results":"27","hashOfConfig":"17"},{"size":1573,"mtime":1611154142971,"results":"28","hashOfConfig":"17"},{"size":5175,"mtime":1611154293789,"results":"29","hashOfConfig":"17"},{"size":2123,"mtime":1611165995246,"results":"30","hashOfConfig":"17"},{"size":4076,"mtime":1611165995239,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"5iz52u",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/index.js",[],["74","75"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/App.js",["76","77"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Chatscreen  from \"./container/chatscreen/chatscreen\"\n\nimport client from \"./client\";\nimport Accountinterface from \"./container/accountinterface/accountinterface\";\nimport Uploadimagetest from \"./container/uploadimagetest/uploadimagetest\";//用不到\n\nimport Loginpage from \"./container/login/loginipage/loginpage\";\nimport Signuppage from \"./container/login/signuppage/signuppage\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Card from \"./container/card/Card\";\n\n\n\n\n\nfunction App() {\n    const [user, setUser] = useState({});\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setUser\": {\n                console.log(\"set user\");\n                setUser({ id: payload.id });\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/chats/:person\">\n                        <Header mode=\"chat\" backButton=\"/chats\" userID={user.id} />\n                    </Route>\n\n                    <Route path=\"/chats\">\n                        <Header mode=\"chat\" backButton=\"/\" userID={user.id} />\n                        <Chatscreen user={user}/>\n                        \n                    </Route>\n                    <Route path=\"/accounts\">\n                        <Header mode=\"account\" backButton=\"/\" userID={user.id} />\n                        <Accountinterface user={user}/>\n                    </Route>\n                    \n\n                    <Route exact path=\"/\">\n                        <Header />\n                        <Card userID={user.id}/>\n                    </Route>\n\n                    \n\n                    <Route exact path=\"/loginpage\">\n                        <Header mode=\"account\" backButton=\"/\" userID={user.id} />\n                        <Loginpage />\n                    </Route>\n\n                    <Route exact path=\"/signuppage\">\n                        <Header mode=\"account\" backButton=\"/\" userID={user.id} />\n                        <Signuppage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/reportWebVitals.js",[],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Header.js",["78"],"import React, { useEffect, useState } from \"react\";\nimport \"./Header.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\"; //account button\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\"; //chat button\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\"; //return button\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\"; //return button\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\"; //main page button\nimport { Link, useHistory } from \"react-router-dom\";\nimport client from \"./client\";\nconst User = { id: null };\n\nfunction Header({ mode, backButton, userID }) {\n    const history = useHistory();\n    const [user, setUser] = useState({ id: userID });\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setUser\": {\n                console.log(\"set user\");\n                setUser({ id: payload.id });\n                User.id = payload.id;\n                sendData([\"getCards\", { userID: user.id }]);\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    var reloadMain = () => {\n        sendData([\"getUser\", { userID: user.id }]);\n        sendData([\"getCards\", { userID: user.id }]);\n    };\n    return (\n        <div className=\"header\">\n            {mode === \"chat\" ? (\n                <IconButton\n                    onClick={() => {\n                        history.replace(backButton);\n                        reloadMain();\n                    }}\n                >\n                    <ArrowBackIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                </IconButton>\n            ) : (\n                <Link to=\"/accounts\">\n                    \n                    <IconButton onClick={ () =>  sendData(['Accountinterface_getUser',{ userID: \"1\"}])}> {/* 我的db裡有891206的id*/}\n                        <AccountCircleOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                </Link>\n            )}\n\n            <Link to=\"/\">\n                <IconButton onClick={() => sendData([\"getCards\", { userID: user.id }])}>\n                    <FavoriteTwoToneIcon style={{ fontSize: 45 }} color=\"secondary\" className=\"header__logo\" />\n                </IconButton>\n            </Link>\n\n            {mode === \"account\" ? (\n                <IconButton\n                    onClick={() => {\n                        history.replace(backButton);\n                        reloadMain();\n                    }}\n                >\n                    <ArrowForwardIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                </IconButton>\n            ) : (\n                <Link to=\"/chats\">\n                    <IconButton onClick={()=>sendData('getchatusers',{userID: user.id}) }>\n                        <ForumOutlinedIcon className=\"header__icon\" fontSize=\"large\" />\n                    </IconButton>\n                </Link>\n            )}\n        </div>\n    );\n}\n\nexport default Header;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["79","80","81","82","83","84","85","86","87","88"],"import { useCallback, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport './accountinterface.css'\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Userinfo from './userinfo'\n\n//const client = new WebSocket(\"ws://localhost:4000\");\nimport client from \"../../client\"\n\nvar isLogin = false;\n\nfunction Accountinterface(props) {\n    const [imagebuffer, setImagebuffer] = useState(null);\n    const [testid,setTestid] = useState(\"00000000\")//for broadcasttest\n    //const [user,setUser] = useState({id:\"\",name:\"\",photo:\"\",sex:\"\",password:\"\"})\n    const [user,setUser] = useState(props.user)\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n        \n        \n        \n        switch (task) {\n            case \"Accountinterface_setUser\": {\n                isLogin = true;\n                console.log(\"receive: Accountinterface_setUser\");\n                console.log(payload)\n                console.log(payload._id)\n                \n                //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n                   \n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n                setUser(payload[0])\n            \n                break;\n            }\n            case \"Accountinterface_updateUser\": {\n                console.log(\"receive: Accountinterface_updateUser\");\n                //console.log(payload)// is old one\n                const {_id} = payload;\n\n                //sendData(['Accountinterface_getUser',{ userID: }])\n                \n                //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n                   \n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n                //setUser(payload[0])\n            \n                break;\n            }\n            case \"Image\": {\n                console.log(\"receive: Image\");\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\n                setImagebuffer(imagebuffer);\n\n                break;\n            }\n            case `broadcast${testid}`: {\n                console.log(`receive: broadcast${testid}`);\n                const {id, body}= payload\n                console.log(payload)\n\n                \n\n                break;\n            }\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    const sendtest = () => {\n        //console.log('sendtest: { id: \"fromid\", body:\"testbody\"}')\n        console.log('sendtest: { userID: \"891206\"}')\n        sendData(['Accountinterface_getUser',{ userID: \"891206\"}])\n    }\n    // const sendtest2 = () => {\n    //     console.log('sendtest2: { id: \"fromid\", body:\"testbody\"}')\n    //     sendData(['sendtest',{ id: testid, body:\"testbody\"}])\n    // }\n\n\n\n    // var Hi_url = \"60040f3741ef153e7cd5e71f\";\n    // //sendData(['getImageByID',{_id: Hi_url}])\n    // const getphoto = async () => {\n    //     sendData([\"getImageByID\", { ImageID: Hi_url }]);\n    //     console.log(imagebuffer);\n    // };\n\n    return (\n        <div>\n            {isLogin ? (\n            <div className=\"App-accountinterface\">\n                <div className=\"profile\">\n                    {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\n                </div>\n                <div className=\"setting\">\n                    <Link to=\"/loginpage\">\n                        <IconButton>\n                            <SettingsRoundedIcon style={{ fontSize: 40 }} className=\"header__logo\" />\n                        </IconButton>\n                    </Link>\n                </div>\n                <button onClick={sendtest}> press me will trigger \"Accountinterface_setUser\"</button>\n                <Userinfo user={user}/>\n            \n\n                \n                \n            </div>\n            ):(\n                <div className=\"info\">\n                    <h3>Please login in or sign up!</h3>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Accountinterface;\n\n\n// <div className=\"settinglist\">\n// <ul className=\"todo-app__list\" id=\"todo-list\">\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Name\n//             </h1>\n//             <h2> {user.name}</h2>\n//             <Link to=\"/\">\n//                 <IconButton>\n//                     <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\n//                 </IconButton>\n//             </Link>\n            \n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Sex\n//             </h1>\n//             <h2> {user.sex}</h2>\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 ID\n//             </h1>\n//             <h2> {user.id}</h2>\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Password\n//             </h1>\n//             <h2> {user.password}</h2>\n//     </li>\n    \n\n// </ul>\n// </div>","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/client.js",[],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js",["89","90","91","92","93","94","95","96","97"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js",["98"],"import { useState } from 'react'\n// import { w3cwebsocket as W3CWebSocket } from 'websocket'\n\n// const client = new W3CWebSocket('ws://localhost:4000')\nconst client = new WebSocket('ws://localhost:4000')\n\nconst useChat = () => {\n  const [messages, setMessages] = useState([])\n  const [status, setStatus] = useState({})\n  const [opened, setOpened] = useState(false)\n  const Id = 3\n\n  client.onmessage = (message) => {\n    const { data } = message\n    const [task, payload] = JSON.parse(data)\n    \n\n    switch (task) {\n      case 'initMsg': {\n        setMessages(() => payload)\n        break\n      }\n      case 'resOfSendMessage': {\n        setMessages( (messages) => [...messages, ...payload])\n        \n        break\n      }\n      case `broadcast${Id}`: {\n        setMessages( (messages) => [...messages, ...payload])\n        \n        break\n      }\n      case \"initchatusers\" : {\n        console.log(\"receive: initchatuser\")\n        console.log(payload)\n      }\n      case 'status': {\n        setStatus(payload)\n        //console.log('status')\n        break\n      }\n      case 'cleared': {\n        //console.log('cleared')\n        setMessages([])\n        break\n      }\n      \n      default:\n        break\n    }\n  }\n\n  const sendData = (data) => {\n    // TODO\n    client.send(JSON.stringify(data))\n  }\n\n  const sendMessage = (msg) => {\n    // TODO\n    sendData(['messageInput', msg]);\n  };\n\n  //console.log('frontend intoChat 1')\n  client.onopen = () => {\n    //console.log('frontend intoChat 2')\n    setOpened(true)\n    sendData(['intoChat',{msg : 'intoChatInit'}])\n    \n  }\n\n  const clearMessages = () => {\n    // TODO\n    client.send(JSON.stringify(['clear','']))\n  }\n\n  return {\n    status,\n    opened,\n    messages,\n    sendMessage,\n    clearMessages\n  }\n}\n\nexport default useChat\n\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js",["99","100","101","102","103","104"],"import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport useSignUpForm from \"./CustomHooks\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"./signuppage.css\";\n\nconst Signuppage = () => {\n    const signup = () => {\n        //     alert(`User Created!\n        // Name: ${inputs.Name}\n        // Sex: ${inputs.Sex}`);\n    };\n    const {\n        inputs,\n        photo,\n        photodata,\n        toHomePage,\n        selectsex,\n        selectsexes,\n        handleInputChange,\n        handlePhotoInputChange,\n        handleSubmit,\n        handleSelectsexChange,\n    } = useSignUpForm({ Name: \"\", Sex: \"\", id: \"\", password1: \"\", password2: \"\" }, signup);\n    const selectfilebtnRef = useRef({});\n    const clickselectphoto = () => {\n        //selectfilebtnRef.current.click();\n        console.log(\"clickselectphoto\");\n    };\n    return toHomePage ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <div className=\"section is-fullheight\">\n            <div className=\"container\">\n                <div className=\"column is-4 is-offset-4\">\n                    <div className=\"box\">\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Name</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"Name\"\n                                        onChange={handleInputChange}\n                                        value={inputs.Name}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                {/* <h3 className=\"h3 has-text-centered\">Sex</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"Sex\"\n                                        onChange={handleInputChange}\n                                        value={inputs.Sex}\n                                        required\n                                    />\n                                </div> */}\n                                <h3 className=\"h3 has-text-centered\">Sex</h3>\n                                <div className=\"control\">\n                                    <select onChange={e => handleSelectsexChange(e.target.value)}>\n                                        {selectsexes.map((selectsex, i) => {\n                                            return <option key={i}>{selectsex}</option>;\n                                            })}\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">id</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"id\"\n                                        onChange={handleInputChange}\n                                        value={inputs.id}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password1\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password1}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Re-enter Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password2\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password2}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Photo</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        style={{ display: \"\" }}\n                                        type=\"file\"\n                                        onChange={handlePhotoInputChange}\n                                        ref={selectfilebtnRef}\n                                    />\n                                    {/*<button className=\"btn_for_select_photo\" onClick={clickselectphoto}>Pick Photo </button>*/}\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <button className=\"btn-one\" type=\"submit\">\n                                Sign Up\n                            </button>\n                            <h3>Already has an account?</h3>\n                            <Link to=\"/loginpage\">\n                                <button className=\"btn\">Login</button>\n                            </Link>\n                        </form>\n                        {photodata ? <img src={photodata} className=\"rounded mx-auto d-block\" alt=\"figure\" /> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Signuppage;\n\n{\n    /* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */\n}\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js",["105","106","107","108"],"import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport useLoginForm from \"./CustomHooksforloginpage\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"./loginpage.css\";\n\nconst Loginpage = () => {\n    const login = () => {\n        //     alert(`User Created!\n        // Name: ${inputs.Name}\n        // Sex: ${inputs.Sex}`);\n    };\n\n    const { inputs, toHomePage, handleInputChange, handleSubmit } = useLoginForm({ id: \"\", password: \"\" }, login);\n\n    return toHomePage ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <div className=\"section is-fullheight\">\n            <div className=\"container\">\n                <div className=\"column is-4 is-offset-4\">\n                    <div className=\"box\">\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\n                            <div className=\"field\">\n                                <h3 className=\"label\">User Id</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"id\"\n                                        onChange={handleInputChange}\n                                        value={inputs.id}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"label\">Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password}\n                                    />\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <button className=\"btn-one\" type=\"submit\">\n                                Login\n                            </button>\n                            <h3>Has no account?</h3>\n                            <Link to=\"/signuppage\">\n                                <button className=\"btn\">Sign up</button>\n                            </Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loginpage;\n\n{\n    /* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */\n}\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js",["109","110","111","112"],"import {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useSignUpForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [photo, setPhoto] = useState(null)\n  const [photodata, setPhotodata] = useState(null)\n  const [toHomePage, setToHomePage] = useState(false);\n\n  const [selectsex,setSelectsex] = useState(\"\")\n  const [selectsexes,setSelectsexes] = useState([\"male\",\"female\"])\n\n  const handleSelectsexChange = async(value) => {\n    await setSelectsex(value)\n  }\n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_signup\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n            if (msg===\"Sign up sucessfully\"){\n              setToHomePage(true)\n            }\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserSignup = (userinfo,photodata)=> {\n    let { Name, Sex, id, password1 } = userinfo;\n    let userdata={ \"name\":Name, \"sex\": selectsex, \"id\":id, \"password\": password1, \"photodata\": photodata}\n    sendData(  [\"setUser\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs,photodata)\n\n    // await searchid(inputs.id);\n\n\n    sendUserSignup(inputs,photodata)\n\n    console.log(\"her777777e\")\n    setInputs(initialValues)\n    setPhoto(null)\n    setPhotodata(null)\n\n\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  const handlePhotoInputChange = (event) => {\n    event.persist();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    reader.onloadend = () =>{\n      setPhoto(file)\n      setPhotodata(reader.result)\n    }\n    reader.readAsDataURL(file);\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    handlePhotoInputChange,\n    handleSelectsexChange,\n    selectsex,\n    selectsexes,\n    inputs,\n    photo,\n    photodata,\n    toHomePage\n  };\n}\nexport default useSignUpForm;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js",["113","114","115"],"import { set } from 'mongoose';\nimport {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useLoginForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_login\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n\n            if (msg===\"Welcome\"){\n              setToHomePage(true)\n            }\n\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserLogin = (userinfo)=> {\n    let { id, password} = userinfo;\n    let userdata={  \"id\":id, \"password\": password}\n    sendData(  [\"userLogin\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs)\n    sendUserLogin(inputs)\n    setInputs(initialValues)\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  \n  return {\n    handleSubmit,\n    handleInputChange, \n    inputs,\n    toHomePage\n  };\n}\nexport default useLoginForm;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/card/Card.js",["116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Card.css\";\nimport client from \"../../client\";\n\nconst alreadyRemoved = new Set();\nvar isLogin = false;\n\nconst Card = ({ userID }) => {\n    const [people, setPeople] = useState([]);\n    const [likedBy, setLikedBy] = useState([]);\n    const [like, setLike] = useState([]);\n    const [user, setUser] = useState({ id: userID });\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setUser\": {\n                //console.log(\"set user\");\n                isLogin = true;\n                setUser({ id: payload.id });\n                setLike(payload.like);\n                setLikedBy(payload.likedBy);\n                sendData([\"getCards\", { userID: user.id }]);\n                sendData([\"initHeader\", { userID: user.id }]);\n                break;\n            }\n            case \"initCard\": {\n                setPeople(() => payload);\n                break;\n            }\n            case \"likeList\": {\n                setLike(() => payload);\n                break;\n            }\n            case \"likedByList\": {\n                setLikedBy(() => payload);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    const outOfFrame = (id) => {\n        console.log(id + \" left the screen!\");\n    };\n\n    const swiped = (direction, idToDelete) => {\n        console.log(\"removing: \" + idToDelete);\n        alreadyRemoved.add(idToDelete);\n        console.log(alreadyRemoved);\n        if (direction === \"left\") {\n            addDislike(idToDelete);\n        }\n        if (direction === \"right\") {\n            //if (likedBy.includes(idToDelete)) console.log(\"match!\");\n            addLike(idToDelete);\n        }\n    };\n\n    const swipe = (dir) => {\n        const cardsLeft = people.filter((person) => !alreadyRemoved.has(person.name));\n        if (cardsLeft.length) {\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].id; // Find the card object to be removed\n            const index = people.map((person) => person.id).indexOf(toBeRemoved); // Find the index of which to make the reference to\n            alreadyRemoved.add(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n        }\n    };\n\n    const addLike = (id) => {\n        //swipe(\"right\");\n        sendData([\"like\", { userID: user.id, id: id }]);\n    };\n\n    const addDislike = (id) => {\n        //swipe(\"left\");\n        sendData([\"dislike\", { userID: user.id, id: id }]);\n    };\n\n    /*\n    const SwipeButtons = () => {\n        return (\n            <div className=\"swipeButtons\">\n                <IconButton className=\"swipeButtons__left\" onClick={swipe(\"left\")}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton className=\"swipeButtons__right\" onClick={swipe(\"right\")}>\n                    <FavoriteIcon fontSize=\"large\" />\n                </IconButton>\n            </div>\n        );\n    };\n    */\n\n    return (\n        <div>\n            {isLogin ? (\n                <div className=\"cardContainer\">\n                    {people ? (\n                        people.map((person) =>\n                            alreadyRemoved.has(person.id) ? null : (\n                                <TinderCard\n                                    className=\"swipe\"\n                                    key={person.id}\n                                    onSwipe={(dir) => swiped(dir, person.id)}\n                                    preventSwipe={[\"up\", \"down\"]}\n                                    onCardLeftScreen={() => outOfFrame(person.id)}\n                                >\n                                    <div\n                                        style={{\n                                            backgroundImage: person.photo\n                                                ? `url(${person.photo})`\n                                                : `url(https://i.pinimg.com/originals/7a/98/1d/7a981de80cfa0a7aa92f5d523d3509cc.jpg)`,\n                                        }}\n                                        className=\"card\"\n                                    >\n                                        <h3>{person.name}</h3>\n                                    </div>\n                                </TinderCard>\n                            )\n                        )\n                    ) : (\n                        <div className=\"info\">\n                            <h3>no other user left...</h3>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div className=\"info\">\n                    <h3>Please login in or sign up!</h3>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js",["124","125","126","127","128"],"import { useCallback, useState, useRef, useEffect } from 'react'\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\n\nconst client = new WebSocket('ws://localhost:4000')\n\nfunction Userinfo(){ \n    const [selectedFile, setSelectedFile] = useState(null)\n    const [filedata,setFiledata] = useState(null)\n\n    const selectfilebtnRef = useRef( {} );\n\n    const sendData = (data) => {\n        client.send(JSON.stringify( data ))\n    }\n    \n    const sendFile = (file)=>{// actually send image\n        sendData(  [\"sendfile\",file])\n    }\n\n    const fileselectedHandler = async(event)=>{\n        //console.log(event.target.files[0])\n        //setSelectedFile(event.target.files[0])\n        event.preventDefault();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () =>{\n            setSelectedFile(file)\n            setFiledata(reader.result)\n        }\n        reader.readAsDataURL(file);\n    }\n\n    const testclick = ()=>{\n        selectfilebtnRef.current.click();\n        console.log(\"clicks\")\n    }\n\n\n    const fileUploadHandler = ()=>{\n        console.log('Filedata: ',filedata)\n        //console.log(selectedFile)\n        //console.log(\"clicks\")\n        if (!filedata) {\n            console.log('filedata not found')\n            return };\n        sendFile({\"filedata\": filedata})\n        console.log(\"done\")\n        setSelectedFile(null)\n        setFiledata(null)\n        selectfilebtnRef.current.value=null;\n\n        \n    };\n\n    return(\n        <div className=\"App-userinfo\">\n            <input \n              style={{display: 'none'}} \n              type=\"file\" \n              onChange={(e)=> fileselectedHandler(e)}\n              ref={selectfilebtnRef}\n              />\n            \n            <button onClick={testclick}>Pick files </button>\n            <button onClick={fileUploadHandler}>Upload </button>\n\n            {filedata? <img src={filedata} className='rounded mx-auto d-block' alt='figure' /> : null}\n        </div>\n    )\n    \n\n\n}\n\n\n\n\nexport default Userinfo;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js",["129","130"],"import {  useState, useRef } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { Link, useHistory } from \"react-router-dom\";\nimport './userinfo.css'\n\nimport client from '../../client'\n\nconst Userinfo = (props) => {\n\n    const {user}=props\n    const inputRef = useRef( {} );\n\n    const [info_be_setting,setInfo_be_setting]=useState('none')\n    const [infoinput,setInfoinput] = useState('')\n    const [placeholder,setPlaceholder] = useState(\"\")\n\n\n    const setinfo = (info,originalvalue)=>{//info like: name, sex ... \n        //console.log()                    // originvalue like: Toby,male\n        setInfo_be_setting(info)\n        setPlaceholder(originalvalue)\n    }\n\n    const sendData = (data) => {\n        client.send(JSON.stringify( data ))\n    }\n    const sendupdateinfo = (msg) => {\n        sendData([\"Accountinterface_updateUser\",msg])\n    }\n\n\n\n    \n    const updateinfo = () => {\n        //console.log(infoinput)\n        console.log('updateinfo')\n       \n\n        sendupdateinfo({user_id: user._id,id:user.id, infotobeupdate: info_be_setting ,newvalue: infoinput})\n\n\n        setInfo_be_setting('none')\n\n\n    }\n\n    return (\n        (info_be_setting !== \"none\") ?\n        <div>\n            <p> { info_be_setting} </p>\n            <div className=\"App-userinfo\">\n                <input \n                style={{display: \"\"}} \n                type=\"text\" \n                value={infoinput}\n                onChange={(e)=> setInfoinput(e.target.value)}\n                placeholder={placeholder}\n                ref={inputRef}\n                />\n                \n                <button onClick={updateinfo}>upload</button>\n                \n                \n            </div>\n\n        </div>\n        :\n        <div className=\"settinglist\">\n            <p> { info_be_setting}</p>\n            <ul className=\"todo-app__list\" id=\"todo-list\">\n                <li className=\"todo-app__item\">\n                        <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n                            Name\n                        </h1>\n                        <h2> {user.name}</h2>\n                        \n                        <IconButton  onClick={()=>setinfo(\"name\",user.name)}>\n                            <KeyboardArrowRightIcon  style={{ fontSize: 30 }} className=\"header__logo\" />\n                        </IconButton>\n                    \n                        \n                </li>\n                <li className=\"todo-app__item\">\n                        <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n                            Sex\n                        </h1>\n                        <h2> {user.sex}</h2>\n                        \n                        <IconButton onClick={()=>setinfo(\"sex\",user.sex)}>\n                            <KeyboardArrowRightIcon  style={{ fontSize: 30 }} className=\"header__logo\" />\n                        </IconButton>\n                        \n                </li>\n                <li className=\"todo-app__item\">\n                        <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n                            ID\n                        </h1>\n                        <h2> {user.id}</h2>\n                        <IconButton onClick={()=>setinfo(\"id\",user.id)}>\n                            <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\n                        </IconButton>\n                </li>\n                <li className=\"todo-app__item\">\n                        <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n                            Password\n                        </h1>\n                        <h2> {user.password}</h2>\n                        <IconButton onClick={()=>setinfo(\"password\",user.password)}>\n                            <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\n                        </IconButton>\n                </li>\n                \n\n            </ul>\n        </div>\n    )\n}\n\nexport default Userinfo;",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":13,"column":50,"nodeType":"137","messageId":"138","endLine":13,"endColumn":54},{"ruleId":"135","severity":1,"message":"140","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"141","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":21},{"ruleId":"135","severity":1,"message":"140","line":1,"column":33,"nodeType":"137","messageId":"138","endLine":1,"endColumn":42},{"ruleId":"135","severity":1,"message":"142","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"143","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":30},{"ruleId":"135","severity":1,"message":"144","line":16,"column":12,"nodeType":"137","messageId":"138","endLine":16,"endColumn":23},{"ruleId":"135","severity":1,"message":"145","line":17,"column":19,"nodeType":"137","messageId":"138","endLine":17,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":26,"column":9,"nodeType":"148","messageId":"149","endLine":72,"endColumn":10},{"ruleId":"135","severity":1,"message":"150","line":44,"column":24,"nodeType":"137","messageId":"138","endLine":44,"endColumn":27},{"ruleId":"135","severity":1,"message":"151","line":65,"column":24,"nodeType":"137","messageId":"138","endLine":65,"endColumn":26},{"ruleId":"135","severity":1,"message":"152","line":65,"column":28,"nodeType":"137","messageId":"138","endLine":65,"endColumn":32},{"ruleId":"135","severity":1,"message":"153","line":8,"column":20,"nodeType":"137","messageId":"138","endLine":8,"endColumn":25},{"ruleId":"135","severity":1,"message":"154","line":9,"column":9,"nodeType":"137","messageId":"138","endLine":9,"endColumn":19},{"ruleId":"135","severity":1,"message":"155","line":10,"column":9,"nodeType":"137","messageId":"138","endLine":10,"endColumn":18},{"ruleId":"135","severity":1,"message":"156","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":18},{"ruleId":"135","severity":1,"message":"157","line":17,"column":20,"nodeType":"137","messageId":"138","endLine":17,"endColumn":31},{"ruleId":"135","severity":1,"message":"158","line":24,"column":23,"nodeType":"137","messageId":"138","endLine":24,"endColumn":38},{"ruleId":"159","severity":1,"message":"160","line":84,"column":7,"nodeType":"161","endLine":84,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":102,"column":52,"nodeType":"164","messageId":"165","endLine":102,"endColumn":54},{"ruleId":"159","severity":1,"message":"160","line":106,"column":35,"nodeType":"161","endLine":106,"endColumn":70},{"ruleId":"166","severity":1,"message":"167","line":37,"column":7,"nodeType":"168","messageId":"169","endLine":41,"endColumn":8},{"ruleId":"135","severity":1,"message":"170","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":18},{"ruleId":"135","severity":1,"message":"142","line":4,"column":16,"nodeType":"137","messageId":"138","endLine":4,"endColumn":26},{"ruleId":"135","severity":1,"message":"153","line":16,"column":9,"nodeType":"137","messageId":"138","endLine":16,"endColumn":14},{"ruleId":"135","severity":1,"message":"171","line":19,"column":9,"nodeType":"137","messageId":"138","endLine":19,"endColumn":18},{"ruleId":"135","severity":1,"message":"172","line":27,"column":11,"nodeType":"137","messageId":"138","endLine":27,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":146,"column":1,"nodeType":"175","messageId":"176","endLine":153,"endColumn":2},{"ruleId":"135","severity":1,"message":"170","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":18},{"ruleId":"135","severity":1,"message":"177","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"142","line":4,"column":16,"nodeType":"137","messageId":"138","endLine":4,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":69,"column":1,"nodeType":"175","messageId":"176","endLine":76,"endColumn":2},{"ruleId":"135","severity":1,"message":"177","line":1,"column":19,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"178","line":11,"column":22,"nodeType":"137","messageId":"138","endLine":11,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":21,"column":5,"nodeType":"148","messageId":"149","endLine":37,"endColumn":6},{"ruleId":"135","severity":1,"message":"179","line":45,"column":17,"nodeType":"137","messageId":"138","endLine":45,"endColumn":20},{"ruleId":"135","severity":1,"message":"180","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"177","line":2,"column":19,"nodeType":"137","messageId":"138","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":14,"column":5,"nodeType":"148","messageId":"149","endLine":32,"endColumn":6},{"ruleId":"135","severity":1,"message":"140","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"181","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":17},{"ruleId":"135","severity":1,"message":"182","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"135","severity":1,"message":"183","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":18},{"ruleId":"135","severity":1,"message":"184","line":14,"column":12,"nodeType":"137","messageId":"138","endLine":14,"endColumn":19},{"ruleId":"135","severity":1,"message":"185","line":15,"column":12,"nodeType":"137","messageId":"138","endLine":15,"endColumn":16},{"ruleId":"135","severity":1,"message":"186","line":70,"column":11,"nodeType":"137","messageId":"138","endLine":70,"endColumn":16},{"ruleId":"135","severity":1,"message":"187","line":74,"column":19,"nodeType":"137","messageId":"138","endLine":74,"endColumn":24},{"ruleId":"135","severity":1,"message":"141","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":21},{"ruleId":"135","severity":1,"message":"140","line":1,"column":41,"nodeType":"137","messageId":"138","endLine":1,"endColumn":50},{"ruleId":"135","severity":1,"message":"183","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":18},{"ruleId":"135","severity":1,"message":"188","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":27},{"ruleId":"135","severity":1,"message":"189","line":9,"column":12,"nodeType":"137","messageId":"138","endLine":9,"endColumn":24},{"ruleId":"135","severity":1,"message":"139","line":5,"column":10,"nodeType":"137","messageId":"138","endLine":5,"endColumn":14},{"ruleId":"135","severity":1,"message":"142","line":5,"column":16,"nodeType":"137","messageId":"138","endLine":5,"endColumn":26},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Uploadimagetest' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'useHistory' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'imagebuffer' is assigned a value but never used.","'setTestid' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'_id' is assigned a value but never used.","'id' is assigned a value but never used.","'body' is assigned a value but never used.","'photo' is assigned a value but never used.","'haveFriend' is assigned a value but never used.","'manSelect' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setChatuserlist' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useState' is defined but never used.","'selectsex' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useRef' is defined but never used.","'setSelectsexes' is assigned a value but never used.","'Sex' is assigned a value but never used.","'set' is defined but never used.","'CloseIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'IconButton' is defined but never used.","'likedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'swipe' is assigned a value but never used.","'index' is assigned a value but never used.","'SettingsRoundedIcon' is defined but never used.","'selectedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]