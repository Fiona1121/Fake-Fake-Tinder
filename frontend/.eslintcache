[{"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js":"1","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js":"2","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js":"3","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js":"4","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Card.js":"5","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js":"6"},{"size":362,"mtime":1608437953724,"results":"7","hashOfConfig":"8"},{"size":1259,"mtime":1610941220488,"results":"9","hashOfConfig":"8"},{"size":510,"mtime":1610813236017,"results":"10","hashOfConfig":"8"},{"size":1977,"mtime":1608621032597,"results":"11","hashOfConfig":"8"},{"size":2273,"mtime":1610938998918,"results":"12","hashOfConfig":"8"},{"size":138,"mtime":1610870671246,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2lr92w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js",[],["30","31"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js",["32"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js",[],["33","34"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js",[],["35","36"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Card.js",["37","38"],"import React, { useEffect, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Card.css\";\nimport client from \"./client\";\n\nconst Card = () => {\n    const [people, setPeople] = useState([]);\n    const [status, setStatus] = useState({});\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"initCard\": {\n                setPeople(() => payload);\n                break;\n            }\n            case \"updateCard\": {\n                setPeople(() => [...people, ...payload]);\n                break;\n            }\n            case \"status\": {\n                setStatus(payload);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    const addLike = (id) => {\n        sendData([\"like\", id]);\n    };\n\n    const addDislike = (id) => {\n        sendData([\"dislike\", id]);\n    };\n\n    const SwipeButtons = () => {\n        return (\n            <div className=\"swipeButtons\">\n                <IconButton className=\"swipeButtons__left\" onclick={addDislike}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton className=\"swipeButtons__right\" onclick={addLike}>\n                    <FavoriteIcon fontSize=\"large\" />\n                </IconButton>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"cardContainer\">\n                {people.map((person) => (\n                    <TinderCard className=\"swipe\" key={person.name} preventSwipe={[\"up\", \"down\"]}>\n                        <div style={{ backgroundImage: `url(${person.url})` }} className=\"card\">\n                            <h3>{person.name}</h3>\n                        </div>\n                    </TinderCard>\n                ))}\n            </div>\n            <div className=\"swipeButtonContainer\">\n                <SwipeButtons />\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":50,"nodeType":"45","messageId":"46","endLine":8,"endColumn":54},{"ruleId":"39","replacedBy":"47"},{"ruleId":"41","replacedBy":"48"},{"ruleId":"39","replacedBy":"49"},{"ruleId":"41","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"52","line":11,"column":12,"nodeType":"45","messageId":"46","endLine":11,"endColumn":18},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["53"],["54"],["53"],["54"],"'useEffect' is defined but never used.","'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]