[{"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js":"1","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js":"2","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js":"3","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js":"4","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js":"5","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js":"6","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js":"7","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js":"8","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js":"9","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js":"10","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/card/Card.js":"11","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js":"12","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"13","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js":"14","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js":"15"},{"size":2045,"mtime":1611209093256,"results":"16","hashOfConfig":"17"},{"size":6967,"mtime":1611208743135,"results":"18","hashOfConfig":"17"},{"size":1573,"mtime":1611138470779,"results":"19","hashOfConfig":"17"},{"size":4294,"mtime":1611215818476,"results":"20","hashOfConfig":"17"},{"size":4220,"mtime":1611216926590,"results":"21","hashOfConfig":"17"},{"size":510,"mtime":1610813236017,"results":"22","hashOfConfig":"17"},{"size":362,"mtime":1608437953724,"results":"23","hashOfConfig":"17"},{"size":138,"mtime":1610870671246,"results":"24","hashOfConfig":"17"},{"size":5000,"mtime":1611219767576,"results":"25","hashOfConfig":"17"},{"size":2123,"mtime":1611161336275,"results":"26","hashOfConfig":"17"},{"size":5700,"mtime":1611228483436,"results":"27","hashOfConfig":"17"},{"size":3080,"mtime":1611138470783,"results":"28","hashOfConfig":"17"},{"size":5910,"mtime":1611216658986,"results":"29","hashOfConfig":"17"},{"size":1708,"mtime":1611214326864,"results":"30","hashOfConfig":"17"},{"size":2432,"mtime":1611208743133,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1ijma0l",{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"35"},"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js",["73","74"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport client from \"./client\";\nimport Accountinterface from \"./container/accountinterface/accountinterface\";\nimport Uploadimagetest from \"./container/uploadimagetest/uploadimagetest\"; //用不到\n\nimport Loginpage from \"./container/login/loginipage/loginpage\";\nimport Signuppage from \"./container/login/signuppage/signuppage\";\nimport Chatscreen from \"./container/chatscreen/chatscreen\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Card from \"./container/card/Card\";\n\nfunction App() {\n    const [user, setUser] = useState({});\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setAppUser\": {\n                console.log(\"set user\");\n                setUser(payload[0]);\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/chats\">\n                        <Header mode=\"chat\" backButton=\"/\" />\n                        <Chatscreen />\n                    </Route>\n                    <Route path=\"/accounts\">\n                        <Header mode=\"account\" backButton=\"/\" userID={user.id} />\n                        <Accountinterface user={user} />\n                    </Route>\n\n                    <Route exact path=\"/\">\n                        <Header mode=\"main\" backButton=\"\" userID={user.id} />\n                        <Card userID={user.id} />\n                    </Route>\n\n                    <Route exact path=\"/loginpage\">\n                        <Loginpage />\n                    </Route>\n\n                    <Route exact path=\"/signuppage\">\n                        <Signuppage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n",["75","76"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js",["77","78","79","80","81"],"import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport useSignUpForm from \"./CustomHooks\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"./signuppage.css\";\n\nconst Signuppage = () => {\n    const signup = () => {\n        //     alert(`User Created!\n        // Name: ${inputs.Name}\n        // Sex: ${inputs.Sex}`);\n    };\n    const {\n        inputs,\n        photo,\n        photodata,\n        toHomePage,\n        handleInputChange,\n        handlePhotoInputChange,\n        handleSubmit,\n    } = useSignUpForm({ Name: \"\", Sex: \"\", id: \"\", password1: \"\", password2: \"\" }, signup);\n    const selectfilebtnRef = useRef({});\n    const clickselectphoto = () => {\n        //selectfilebtnRef.current.click();\n        console.log(\"clickselectphoto\");\n    };\n    return toHomePage ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <div className=\"section is-fullheight\">\n            <div className=\"container\">\n                <div className=\"column is-4 is-offset-4\">\n                    <div className=\"box\">\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Name</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"Name\"\n                                        onChange={handleInputChange}\n                                        value={inputs.Name}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Sex</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"Sex\"\n                                        onChange={handleInputChange}\n                                        value={inputs.Sex}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">id</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"id\"\n                                        onChange={handleInputChange}\n                                        value={inputs.id}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password1\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password1}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Re-enter Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password2\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password2}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Photo</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        style={{ display: \"\" }}\n                                        type=\"file\"\n                                        onChange={handlePhotoInputChange}\n                                        ref={selectfilebtnRef}\n                                    />\n                                    {/*<button className=\"btn_for_select_photo\" onClick={clickselectphoto}>Pick Photo </button>*/}\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <button className=\"btn-one\" type=\"submit\">\n                                Sign Up\n                            </button>\n                            <h3>Already has an account?</h3>\n                            <Link to=\"/loginpage\">\n                                <button className=\"btn\">Login</button>\n                            </Link>\n                        </form>\n                        {photodata ? <img src={photodata} className=\"rounded mx-auto d-block\" alt=\"figure\" /> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Signuppage;\n\n{\n    /* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */\n}\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js",["82","83","84"],"import { set } from 'mongoose';\nimport {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useLoginForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_login\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n\n            if (msg===\"Welcome\"){\n              setToHomePage(true)\n            }\n\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserLogin = (userinfo)=> {\n    let { id, password} = userinfo;\n    let userdata={  \"id\":id, \"password\": password}\n    sendData(  [\"userLogin\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs)\n    sendUserLogin(inputs)\n    setInputs(initialValues)\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  \n  return {\n    handleSubmit,\n    handleInputChange, \n    inputs,\n    toHomePage\n  };\n}\nexport default useLoginForm;","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js",["85","86"],"import React, { useEffect, useState } from \"react\";\nimport \"./Header.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\"; //account button\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\"; //chat button\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\"; //return button\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\"; //return button\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\"; //main page button\nimport { Link, useHistory } from \"react-router-dom\";\nimport client from \"./client\";\n\nfunction Header({ mode, backButton, userID }) {\n    console.log(\"header: user\", userID);\n    const history = useHistory();\n    const [user, setUser] = useState({ id: userID });\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"initHeader\": {\n                console.log(\"init header user\", payload);\n                setUser(() => payload);\n                break;\n            }\n            case \"Accountsettup\": {\n                console.log(\"In Header\");\n                console.log(\"Accountsettup\");\n                console.log(payload[0]);\n                //setUser({ id: payload.id });\n                setUser(payload[0]);\n                break;\n            }\n            case \"initCard\": {\n                //setPeople(() => payload);\n                console.log(\"Header accept\");\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    var reloadMain = () => {\n        sendData([\"getUser\", { userID: user.id }]);\n        sendData([\"getCards\", { userID: user.id }]);\n    };\n    var reloadAccountinterface = async () => {\n        await sendData([\"getUser\", { userID: user.id }]);\n        await sendData([\"Accountinterface_getUser\", { userID: user.id }]);\n    };\n    return (\n        <>\n            <div className=\"header\">\n                {mode === \"chat\" ? (\n                    <IconButton\n                        onClick={() => {\n                            history.replace(backButton);\n                            reloadMain();\n                        }}\n                    >\n                        <ArrowBackIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/accounts\">\n                        <IconButton onClick={() => sendData([\"Accountinterface_getUser\", { userID: user.id }])}>\n                            {\" \"}\n                            {/* 我的db裡有891206的id*/}\n                            <AccountCircleOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                        </IconButton>\n                    </Link>\n                )}\n\n                <Link to=\"/\">\n                    <IconButton onClick={() => reloadMain()}>\n                        <FavoriteTwoToneIcon style={{ fontSize: 45 }} color=\"secondary\" className=\"header__logo\" />\n                    </IconButton>\n                </Link>\n\n                {mode === \"account\" ? (\n                    <IconButton\n                        onClick={() => {\n                            history.replace(backButton);\n                            reloadMain();\n                        }}\n                    >\n                        <ArrowForwardIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/chats\">\n                        <IconButton\n                            onClick={() => {\n                                sendData([\"chat_getUser\", { userID: user.id }]);\n                            }}\n                        >\n                            <ForumOutlinedIcon className=\"header__icon\" fontSize=\"large\" />\n                        </IconButton>\n                    </Link>\n                )}\n            </div>\n            <p>{userID}</p>\n        </>\n    );\n}\n\nexport default Header;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js",["87","88","89","90","91"],"import \"./chatscreen.css\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport useChat from \"./useChat\";\nimport { Button, Input, message, Tag } from \"antd\";\nimport client from \"../../client\";\n\nfunction Chatscreen() {\n    const [user, setUser] = useState({});\n    const [body, setBody] = useState(\"\");\n    const [chatuserlist, setChatuserlist] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [opened, setOpened] = useState(false);\n    const [toId, setToId] = useState(\"\");\n\n    const bodyRef = useRef(null);\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    const sendMessage = (msg) => {\n        sendData([\"messageInput\", msg]);\n    };\n\n    const getchatuserlist = () => {\n        if (user !== undefined) {\n            console.log(\"get chat user list\");\n            sendData([\"getchatuserlist\", { fromId: user.id }]);\n        }\n    };\n\n    client.onopen = () => {\n        //console.log('frontend intoChat 2')\n        setOpened(true);\n        sendData([\"intoChat\", { msg: \"intoChatInit\" }]);\n    };\n    const handleToidchange = (newid) => {\n        //setChatuserid(newid)\n        setToId(newid);\n    };\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n        switch (task) {\n            case \"initMsg\": {\n                setMessages(() => payload);\n                break;\n            }\n            case \"resOfSendMessage\": {\n                setMessages((messages) => [...messages, ...payload]);\n\n                break;\n            }\n            case \"initChat\": {\n                console.log(\"init chatroom user\", payload[0].id);\n                setUser(payload[0]);\n                sendData([\"initHeader\", { userID: payload[0].id }]);\n                break;\n            }\n            case \"initchatuserlist\": {\n                console.log(\"initchatuserlist\");\n                console.log(payload);\n                setChatuserlist(payload);\n            }\n\n            case `broadcast${user.id}`: {\n                setMessages((messages) => [...messages, ...payload]);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    return (\n        <div className=\"App-chatscreen\">\n            <div className=\"App-title\">\n                <h1>{user.id}'s Chat Room</h1>\n            </div>\n            <div className=\"App-messages\">\n                {messages.length === 0 ? (\n                    <p style={{ color: \"#ccc\" }}>{opened ? \"No messages...\" : \"Loading...\"}</p>\n                ) : (\n                    messages.map((message, i) =>\n                        message.fromId === user.id ? (\n                            <p className=\"App-message\" key={i}>\n                                <Tag color=\"blue\">{user.id + \":\"}</Tag> {message.body}\n                            </p>\n                        ) : (\n                            <p className=\"App-message\" key={i}>\n                                <Tag color=\"blue\">{message.fromId + \":\"} </Tag> {message.body}\n                            </p>\n                        )\n                    )\n                )}\n            </div>\n\n            {/* <Input\n        \n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        style={{ marginBottom: 10 }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            bodyRef.current.focus()\n          }\n        }}\n      ></Input> */}\n            <div className=\"control\">\n                <div className=\"toID-select\">\n                    <h3>Please select user to chat with: </h3>\n                    <select onChange={(e) => handleToidchange(e.target.value)}>\n                        {chatuserlist.map((chatuser, i) => {\n                            return <option key={i}>{chatuser.id}</option>;\n                        })}\n                    </select>\n                </div>\n\n                <h3>Refresh to load more:</h3>\n                <button className=\"btn-one\" onClick={getchatuserlist}>\n                    Refresh\n                </button>\n            </div>\n            <br></br>\n            <Input.Search\n                className=\"chat-input\"\n                rows={4}\n                value={body}\n                ref={bodyRef}\n                enterButton=\"Send\"\n                onChange={(e) => setBody(e.target.value)}\n                placeholder=\"Type a message here...\"\n                onSearch={(msg) => {\n                    // if (!msg || !username) {\n                    //   displayStatus({\n                    //     type: 'error',\n                    //     msg: 'Please enter a username and a message body.'\n                    //   })\n                    //   return\n                    // }\n\n                    sendMessage({ fromId: user.id, toId: toId, body: body });\n                    setBody(\"\");\n                }}\n            ></Input.Search>\n        </div>\n    );\n}\n\nexport default Chatscreen;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js",["92","93","94","95","96"],"import { useCallback, useState, useRef, useEffect } from 'react'\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\n\nconst client = new WebSocket('ws://localhost:4000')\n\nfunction Userinfo(){ \n    const [selectedFile, setSelectedFile] = useState(null)\n    const [filedata,setFiledata] = useState(null)\n\n    const selectfilebtnRef = useRef( {} );\n\n    const sendData = (data) => {\n        client.send(JSON.stringify( data ))\n    }\n    \n    const sendFile = (file)=>{// actually send image\n        sendData(  [\"sendfile\",file])\n    }\n\n    const fileselectedHandler = async(event)=>{\n        //console.log(event.target.files[0])\n        //setSelectedFile(event.target.files[0])\n        event.preventDefault();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () =>{\n            setSelectedFile(file)\n            setFiledata(reader.result)\n        }\n        reader.readAsDataURL(file);\n    }\n\n    const testclick = ()=>{\n        selectfilebtnRef.current.click();\n        console.log(\"clicks\")\n    }\n\n\n    const fileUploadHandler = ()=>{\n        console.log('Filedata: ',filedata)\n        //console.log(selectedFile)\n        //console.log(\"clicks\")\n        if (!filedata) {\n            console.log('filedata not found')\n            return };\n        sendFile({\"filedata\": filedata})\n        console.log(\"done\")\n        setSelectedFile(null)\n        setFiledata(null)\n        selectfilebtnRef.current.value=null;\n\n        \n    };\n\n    return(\n        <div className=\"App-userinfo\">\n            <input \n              style={{display: 'none'}} \n              type=\"file\" \n              onChange={(e)=> fileselectedHandler(e)}\n              ref={selectfilebtnRef}\n              />\n            \n            <button onClick={testclick}>Pick files </button>\n            <button onClick={fileUploadHandler}>Upload </button>\n\n            {filedata? <img src={filedata} className='rounded mx-auto d-block' alt='figure' /> : null}\n        </div>\n    )\n    \n\n\n}\n\n\n\n\nexport default Userinfo;","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/card/Card.js",["97","98","99","100","101","102","103","104"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js",["105","106","107","108"],"import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport useLoginForm from \"./CustomHooksforloginpage\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"./loginpage.css\";\n\nconst Loginpage = () => {\n    const login = () => {\n        //     alert(`User Created!\n        // Name: ${inputs.Name}\n        // Sex: ${inputs.Sex}`);\n    };\n\n    const { inputs, toHomePage, handleInputChange, handleSubmit } = useLoginForm({ id: \"\", password: \"\" }, login);\n\n    return toHomePage ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <div className=\"section is-fullheight\">\n            <div className=\"container\">\n                <div className=\"column is-4 is-offset-4\">\n                    <div className=\"box\">\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\n                            <div className=\"field\">\n                                <h3 className=\"label\">User Id</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"id\"\n                                        onChange={handleInputChange}\n                                        value={inputs.id}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"label\">Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password}\n                                    />\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <button className=\"btn-one\" type=\"submit\">\n                                Login\n                            </button>\n                            <h3>Has no account?</h3>\n                            <Link to=\"/signuppage\">\n                                <button className=\"btn\">Sign up</button>\n                            </Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loginpage;\n\n{\n    /* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */\n}\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["109","110","111","112","113","114","115","116","117","118","119","120"],"import { useCallback, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nimport \"./accountinterface.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport Userinfo from \"./userinfo\";\n\n//const client = new WebSocket(\"ws://localhost:4000\");\nimport client from \"../../client\";\n\nvar isLogin = false;\n\nfunction Accountinterface(props) {\n    const [imagebuffer, setImagebuffer] = useState(null);\n    const [testid, setTestid] = useState(\"00000000\"); //for broadcasttest\n    //const [user,setUser] = useState({id:\"\",name:\"\",photo:\"\",sex:\"\",password:\"\"})\n    const [user, setUser] = useState(props.user);\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"Accountinterface_setUser\": {\n                isLogin = true;\n                console.log(\"receive: Accountinterface_setUser\");\n                //console.log(payload);\n                //console.log(payload[0]._id);\n\n                //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n                setUser(payload[0]);\n                sendData([\"initHeader\", { userID: payload[0].id }]);\n\n                break;\n            }\n            // case \"Accountinterface_updateUser\": {\n            //     console.log(\"receive: Accountinterface_updateUser\");\n            //     //console.log(payload)// is old one\n            //     const { _id } = payload;\n\n            //     //sendData(['Accountinterface_getUser',{ userID: }])\n\n            //     //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\n            //     //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n\n            //     //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\n            //     //setUser(payload[0])\n\n            //     break;\n            // }\n            case \"Image\": {\n                console.log(\"receive: Image\");\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\n                setImagebuffer(imagebuffer);\n\n                break;\n            }\n            case `broadcast${testid}`: {\n                console.log(`receive: broadcast${testid}`);\n                const { id, body } = payload;\n                console.log(payload);\n\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n\n    const sendtest = () => {\n        //console.log('sendtest: { id: \"fromid\", body:\"testbody\"}')\n        //console.log('sendtest: { userID: \"891206\"}');\n        sendData([\"Accountinterface_getUser\", { userID: user.id }]);\n    };\n    // const sendtest2 = () => {\n    //     console.log('sendtest2: { id: \"fromid\", body:\"testbody\"}')\n    //     sendData(['sendtest',{ id: testid, body:\"testbody\"}])\n    // }\n\n    // var Hi_url = \"60040f3741ef153e7cd5e71f\";\n    // //sendData(['getImageByID',{_id: Hi_url}])\n    // const getphoto = async () => {\n    //     sendData([\"getImageByID\", { ImageID: Hi_url }]);\n    //     console.log(imagebuffer);\n    // };\n\n    return (\n        <div>\n            {isLogin ? (\n                <div className=\"App-accountinterface card-box\">\n                    <div className=\"profile\">\n                        {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\n                    </div>\n                    <br></br>\n                    <Userinfo user={user} />\n                    <br></br>\n                    <div className=\"setting\">\n                        <Link to=\"/loginpage\">\n                            <button className=\"btn-one\" type=\"submit\">\n                                Log Out\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"card-box\">\n                    <h3>PLEASE LOGIN!!</h3>\n                    <br></br>\n                    <Link to=\"/loginpage\">\n                        <button className=\"btn-one\" type=\"submit\">\n                            Login\n                        </button>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Accountinterface;\n\n// <div className=\"settinglist\">\n// <ul className=\"todo-app__list\" id=\"todo-list\">\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Name\n//             </h1>\n//             <h2> {user.name}</h2>\n//             <Link to=\"/\">\n//                 <IconButton>\n//                     <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\n//                 </IconButton>\n//             </Link>\n\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Sex\n//             </h1>\n//             <h2> {user.sex}</h2>\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 ID\n//             </h1>\n//             <h2> {user.id}</h2>\n//     </li>\n//     <li className=\"todo-app__item\">\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\n//                 Password\n//             </h1>\n//             <h2> {user.password}</h2>\n//     </li>\n\n// </ul>\n// </div>\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js",["121","122"],"import { useState } from \"react\";\n// import { w3cwebsocket as W3CWebSocket } from 'websocket'\n\n// const client = new W3CWebSocket('ws://localhost:4000')\nconst client = new WebSocket(\"ws://localhost:4000\");\n\nconst useChat = (User) => {\n    const [user, setUser] = useState(User);\n    const [messages, setMessages] = useState([]);\n    const [status, setStatus] = useState({});\n    const [opened, setOpened] = useState(false);\n\n    // const chatuser1 = { id:\"3\"}\n    // const chatuser2 = { id:\"891206\"}\n    // const chatuser3 = { id: \"123\"}\n\n    //const [fromId, setFromId] = useState(user.id);\n    const [toId, setToId] = useState(\"\");\n\n    const handleToidchange = (newid) => {\n        //setChatuserid(newid)\n        setToId(newid);\n    };\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n        //console.log(task, payload)\n        switch (task) {\n            case \"initMsg\": {\n                setMessages(() => payload);\n                break;\n            }\n            case \"resOfSendMessage\": {\n                setMessages((messages) => [...messages, ...payload]);\n\n                break;\n            }\n            case `broadcast${user.id}`: {\n                setMessages((messages) => [...messages, ...payload]);\n\n                break;\n            }\n\n            case \"status\": {\n                setStatus(payload);\n                //console.log('status')\n                break;\n            }\n            case \"cleared\": {\n                //console.log('cleared')\n                setMessages([]);\n                break;\n            }\n\n            default:\n                break;\n        }\n    };\n\n    const sendData = (data) => {\n        // TODO\n        client.send(JSON.stringify(data));\n    };\n\n    const sendMessage = (msg) => {\n        sendData([\"messageInput\", msg]);\n    };\n\n    //console.log('frontend intoChat 1')\n    client.onopen = () => {\n        //console.log('frontend intoChat 2')\n        setOpened(true);\n        sendData([\"intoChat\", { msg: \"intoChatInit\" }]);\n    };\n\n    const clearMessages = () => {\n        // TODO\n        client.send(JSON.stringify([\"clear\", \"\"]));\n    };\n\n    return {\n        status,\n        opened,\n        messages,\n        toId,\n        handleToidchange,\n        sendMessage,\n        clearMessages,\n    };\n};\n\nexport default useChat;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js",["123","124"],"import {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useSignUpForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [photo, setPhoto] = useState(null)\n  const [photodata, setPhotodata] = useState(null)\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_signup\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n            if (msg===\"Sign up sucessfully\"){\n              setToHomePage(true)\n            }\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserSignup = (userinfo,photodata)=> {\n    let { Name, Sex, id, password1 } = userinfo;\n    let userdata={ \"name\":Name, \"sex\": Sex, \"id\":id, \"password\": password1, \"photodata\": photodata}\n    sendData(  [\"setUser\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs,photodata)\n\n    // await searchid(inputs.id);\n\n\n    sendUserSignup(inputs,photodata)\n\n    console.log(\"her777777e\")\n    setInputs(initialValues)\n    setPhoto(null)\n    setPhotodata(null)\n\n\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  const handlePhotoInputChange = (event) => {\n    event.persist();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    reader.onloadend = () =>{\n      setPhoto(file)\n      setPhotodata(reader.result)\n    }\n    reader.readAsDataURL(file);\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    handlePhotoInputChange,\n    inputs,\n    photo,\n    photodata,\n    toHomePage\n  };\n}\nexport default useSignUpForm;",{"ruleId":"125","severity":1,"message":"126","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":23},{"ruleId":"125","severity":1,"message":"129","line":12,"column":50,"nodeType":"127","messageId":"128","endLine":12,"endColumn":54},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"125","severity":1,"message":"134","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"135","line":4,"column":16,"nodeType":"127","messageId":"128","endLine":4,"endColumn":26},{"ruleId":"125","severity":1,"message":"136","line":16,"column":9,"nodeType":"127","messageId":"128","endLine":16,"endColumn":14},{"ruleId":"125","severity":1,"message":"137","line":24,"column":11,"nodeType":"127","messageId":"128","endLine":24,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":135,"column":1,"nodeType":"140","messageId":"141","endLine":142,"endColumn":2},{"ruleId":"125","severity":1,"message":"142","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"143","line":2,"column":19,"nodeType":"127","messageId":"128","endLine":2,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":14,"column":5,"nodeType":"146","messageId":"147","endLine":32,"endColumn":6},{"ruleId":"125","severity":1,"message":"148","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"149","line":51,"column":9,"nodeType":"127","messageId":"128","endLine":51,"endColumn":31},{"ruleId":"125","severity":1,"message":"148","line":2,"column":17,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"150","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":15},{"ruleId":"125","severity":1,"message":"151","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"152","line":4,"column":25,"nodeType":"127","messageId":"128","endLine":4,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":65,"column":13,"nodeType":"155","messageId":"156","endLine":69,"endColumn":14},{"ruleId":"125","severity":1,"message":"157","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":21},{"ruleId":"125","severity":1,"message":"148","line":1,"column":41,"nodeType":"127","messageId":"128","endLine":1,"endColumn":50},{"ruleId":"125","severity":1,"message":"158","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":18},{"ruleId":"125","severity":1,"message":"159","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":27},{"ruleId":"125","severity":1,"message":"160","line":9,"column":12,"nodeType":"127","messageId":"128","endLine":9,"endColumn":24},{"ruleId":"125","severity":1,"message":"148","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"161","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":17},{"ruleId":"125","severity":1,"message":"162","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":20},{"ruleId":"125","severity":1,"message":"158","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":18},{"ruleId":"125","severity":1,"message":"163","line":15,"column":12,"nodeType":"127","messageId":"128","endLine":15,"endColumn":19},{"ruleId":"125","severity":1,"message":"164","line":16,"column":12,"nodeType":"127","messageId":"128","endLine":16,"endColumn":16},{"ruleId":"125","severity":1,"message":"165","line":75,"column":11,"nodeType":"127","messageId":"128","endLine":75,"endColumn":16},{"ruleId":"125","severity":1,"message":"166","line":79,"column":19,"nodeType":"127","messageId":"128","endLine":79,"endColumn":24},{"ruleId":"125","severity":1,"message":"134","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"143","line":2,"column":20,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"135","line":4,"column":16,"nodeType":"127","messageId":"128","endLine":4,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":69,"column":1,"nodeType":"140","messageId":"141","endLine":76,"endColumn":2},{"ruleId":"125","severity":1,"message":"157","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":21},{"ruleId":"125","severity":1,"message":"148","line":1,"column":33,"nodeType":"127","messageId":"128","endLine":1,"endColumn":42},{"ruleId":"125","severity":1,"message":"135","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"167","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":18},{"ruleId":"125","severity":1,"message":"158","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"159","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":27},{"ruleId":"125","severity":1,"message":"168","line":8,"column":8,"nodeType":"127","messageId":"128","endLine":8,"endColumn":30},{"ruleId":"125","severity":1,"message":"169","line":17,"column":12,"nodeType":"127","messageId":"128","endLine":17,"endColumn":23},{"ruleId":"125","severity":1,"message":"170","line":18,"column":20,"nodeType":"127","messageId":"128","endLine":18,"endColumn":29},{"ruleId":"125","severity":1,"message":"171","line":70,"column":25,"nodeType":"127","messageId":"128","endLine":70,"endColumn":27},{"ruleId":"125","severity":1,"message":"172","line":70,"column":29,"nodeType":"127","messageId":"128","endLine":70,"endColumn":33},{"ruleId":"125","severity":1,"message":"173","line":81,"column":11,"nodeType":"127","messageId":"128","endLine":81,"endColumn":19},{"ruleId":"125","severity":1,"message":"174","line":8,"column":18,"nodeType":"127","messageId":"128","endLine":8,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":50,"column":13,"nodeType":"155","messageId":"156","endLine":54,"endColumn":14},{"ruleId":"125","severity":1,"message":"143","line":1,"column":19,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":14,"column":5,"nodeType":"146","messageId":"147","endLine":30,"endColumn":6},"no-unused-vars","'Uploadimagetest' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'photo' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'set' is defined but never used.","'useRef' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","'reloadAccountinterface' is assigned a value but never used.","'useChat' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useCallback' is defined but never used.","'IconButton' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'selectedFile' is assigned a value but never used.","'CloseIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'likedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'swipe' is assigned a value but never used.","'index' is assigned a value but never used.","'Redirect' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'imagebuffer' is assigned a value but never used.","'setTestid' is assigned a value but never used.","'id' is assigned a value but never used.","'body' is assigned a value but never used.","'sendtest' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]