[{"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js":"1","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js":"2","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js":"3","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js":"4","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js":"5","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js":"6","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js":"7","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js":"8","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js":"9","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js":"10","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/card/Card.js":"11","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js":"12","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"13","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js":"14","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js":"15"},{"size":2045,"mtime":1611209093256,"results":"16","hashOfConfig":"17"},{"size":6967,"mtime":1611208743135,"results":"18","hashOfConfig":"17"},{"size":1573,"mtime":1611138470779,"results":"19","hashOfConfig":"17"},{"size":3779,"mtime":1611208427147,"results":"20","hashOfConfig":"17"},{"size":4038,"mtime":1611209022681,"results":"21","hashOfConfig":"17"},{"size":510,"mtime":1610813236017,"results":"22","hashOfConfig":"17"},{"size":362,"mtime":1608437953724,"results":"23","hashOfConfig":"17"},{"size":138,"mtime":1610870671246,"results":"24","hashOfConfig":"17"},{"size":4135,"mtime":1611209202790,"results":"25","hashOfConfig":"17"},{"size":2123,"mtime":1611161336275,"results":"26","hashOfConfig":"17"},{"size":5605,"mtime":1611208743264,"results":"27","hashOfConfig":"17"},{"size":3080,"mtime":1611138470783,"results":"28","hashOfConfig":"17"},{"size":5815,"mtime":1611210326136,"results":"29","hashOfConfig":"17"},{"size":2913,"mtime":1611209263101,"results":"30","hashOfConfig":"17"},{"size":2432,"mtime":1611208743133,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ijma0l",{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/App.js",["70","71"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js",["72","73","74","75","76"],"import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport useSignUpForm from \"./CustomHooks\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"./signuppage.css\";\n\nconst Signuppage = () => {\n    const signup = () => {\n        //     alert(`User Created!\n        // Name: ${inputs.Name}\n        // Sex: ${inputs.Sex}`);\n    };\n    const {\n        inputs,\n        photo,\n        photodata,\n        toHomePage,\n        handleInputChange,\n        handlePhotoInputChange,\n        handleSubmit,\n    } = useSignUpForm({ Name: \"\", Sex: \"\", id: \"\", password1: \"\", password2: \"\" }, signup);\n    const selectfilebtnRef = useRef({});\n    const clickselectphoto = () => {\n        //selectfilebtnRef.current.click();\n        console.log(\"clickselectphoto\");\n    };\n    return toHomePage ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <div className=\"section is-fullheight\">\n            <div className=\"container\">\n                <div className=\"column is-4 is-offset-4\">\n                    <div className=\"box\">\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Name</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"Name\"\n                                        onChange={handleInputChange}\n                                        value={inputs.Name}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Sex</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"Sex\"\n                                        onChange={handleInputChange}\n                                        value={inputs.Sex}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">id</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"id\"\n                                        onChange={handleInputChange}\n                                        value={inputs.id}\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password1\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password1}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Re-enter Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password2\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password2}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"h3 has-text-centered\">Photo</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        style={{ display: \"\" }}\n                                        type=\"file\"\n                                        onChange={handlePhotoInputChange}\n                                        ref={selectfilebtnRef}\n                                    />\n                                    {/*<button className=\"btn_for_select_photo\" onClick={clickselectphoto}>Pick Photo </button>*/}\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <button className=\"btn-one\" type=\"submit\">\n                                Sign Up\n                            </button>\n                            <h3>Already has an account?</h3>\n                            <Link to=\"/loginpage\">\n                                <button className=\"btn\">Login</button>\n                            </Link>\n                        </form>\n                        {photodata ? <img src={photodata} className=\"rounded mx-auto d-block\" alt=\"figure\" /> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Signuppage;\n\n{\n    /* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */\n}\n",["77","78"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js",["79","80","81"],"import { set } from 'mongoose';\nimport {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useLoginForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_login\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n\n            if (msg===\"Welcome\"){\n              setToHomePage(true)\n            }\n\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserLogin = (userinfo)=> {\n    let { id, password} = userinfo;\n    let userdata={  \"id\":id, \"password\": password}\n    sendData(  [\"userLogin\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs)\n    sendUserLogin(inputs)\n    setInputs(initialValues)\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  \n  return {\n    handleSubmit,\n    handleInputChange, \n    inputs,\n    toHomePage\n  };\n}\nexport default useLoginForm;","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/userinfo.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/Header.js",["82","83"],"import React, { useEffect, useState } from \"react\";\nimport \"./Header.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\"; //account button\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\"; //chat button\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\"; //return button\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\"; //return button\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\"; //main page button\nimport { Link, useHistory } from \"react-router-dom\";\nimport client from \"./client\";\n\nfunction Header({ mode, backButton, userID }) {\n    console.log(\"header: user\", userID);\n    const history = useHistory();\n    const [user, setUser] = useState({ id: userID });\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"initHeader\": {\n                console.log(\"init header user\", payload);\n                setUser(() => payload);\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    };\n    var reloadMain = () => {\n        sendData([\"getUser\", { userID: user.id }]);\n        sendData([\"getCards\", { userID: user.id }]);\n    };\n    return (\n        <>\n            <div className=\"header\">\n                {mode === \"chat\" ? (\n                    <IconButton\n                        onClick={() => {\n                            history.replace(backButton);\n                            reloadMain();\n                        }}\n                    >\n                        <ArrowBackIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/accounts\">\n                        <IconButton onClick={() => sendData([\"Accountinterface_getUser\", { userID: user.id }])}>\n                            {\" \"}\n                            {/* 我的db裡有891206的id*/}\n                            <AccountCircleOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                        </IconButton>\n                    </Link>\n                )}\n\n                <Link to=\"/\">\n                    <IconButton onClick={() => reloadMain()}>\n                        <FavoriteTwoToneIcon style={{ fontSize: 45 }} color=\"secondary\" className=\"header__logo\" />\n                    </IconButton>\n                </Link>\n\n                {mode === \"account\" ? (\n                    <IconButton\n                        onClick={() => {\n                            history.replace(backButton);\n                            reloadMain();\n                        }}\n                    >\n                        <ArrowForwardIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                ) : (\n                    <Link to=\"/chats\">\n                        <IconButton>\n                            <ForumOutlinedIcon className=\"header__icon\" fontSize=\"large\" />\n                        </IconButton>\n                    </Link>\n                )}\n            </div>\n            <p>{userID}</p>\n        </>\n    );\n}\n\nexport default Header;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/index.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/reportWebVitals.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/client.js",[],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js",["84","85","86","87","88"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/uploadimagetest/uploadimagetest.js",["89","90","91","92","93"],"import { useCallback, useState, useRef, useEffect } from 'react'\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\n\nconst client = new WebSocket('ws://localhost:4000')\n\nfunction Userinfo(){ \n    const [selectedFile, setSelectedFile] = useState(null)\n    const [filedata,setFiledata] = useState(null)\n\n    const selectfilebtnRef = useRef( {} );\n\n    const sendData = (data) => {\n        client.send(JSON.stringify( data ))\n    }\n    \n    const sendFile = (file)=>{// actually send image\n        sendData(  [\"sendfile\",file])\n    }\n\n    const fileselectedHandler = async(event)=>{\n        //console.log(event.target.files[0])\n        //setSelectedFile(event.target.files[0])\n        event.preventDefault();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () =>{\n            setSelectedFile(file)\n            setFiledata(reader.result)\n        }\n        reader.readAsDataURL(file);\n    }\n\n    const testclick = ()=>{\n        selectfilebtnRef.current.click();\n        console.log(\"clicks\")\n    }\n\n\n    const fileUploadHandler = ()=>{\n        console.log('Filedata: ',filedata)\n        //console.log(selectedFile)\n        //console.log(\"clicks\")\n        if (!filedata) {\n            console.log('filedata not found')\n            return };\n        sendFile({\"filedata\": filedata})\n        console.log(\"done\")\n        setSelectedFile(null)\n        setFiledata(null)\n        selectfilebtnRef.current.value=null;\n\n        \n    };\n\n    return(\n        <div className=\"App-userinfo\">\n            <input \n              style={{display: 'none'}} \n              type=\"file\" \n              onChange={(e)=> fileselectedHandler(e)}\n              ref={selectfilebtnRef}\n              />\n            \n            <button onClick={testclick}>Pick files </button>\n            <button onClick={fileUploadHandler}>Upload </button>\n\n            {filedata? <img src={filedata} className='rounded mx-auto d-block' alt='figure' /> : null}\n        </div>\n    )\n    \n\n\n}\n\n\n\n\nexport default Userinfo;","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/card/Card.js",["94","95","96","97","98"],"import React, { useEffect, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Card.css\";\nimport client from \"../../client\";\nimport { Link } from \"react-router-dom\";\n\nconst alreadyRemoved = new Set();\nvar isLogin = false;\n\nconst Card = ({ userID }) => {\n    const [people, setPeople] = useState([]);\n    const [likedBy, setLikedBy] = useState([]);\n    const [like, setLike] = useState([]);\n    const [user, setUser] = useState({ id: userID });\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n    client.onopen = () => sendData([\"getCards\", { userID: user.id }]);\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"setCardUser\": {\n                console.log(\"set user\", payload[0].id);\n                isLogin = true;\n                setUser({ id: payload[0].id });\n                setLike(payload[0].like);\n                setLikedBy(payload[0].likedBy);\n                sendData([\"getCards\", { userID: payload[0].id }]);\n                sendData([\"initHeader\", { userID: payload[0].id }]);\n                break;\n            }\n            case \"initCard\": {\n                setPeople(() => payload);\n                break;\n            }\n            case \"likeList\": {\n                setLike(() => payload);\n                break;\n            }\n            case \"likedByList\": {\n                setLikedBy(() => payload);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    const outOfFrame = (id) => {\n        console.log(id + \" left the screen!\");\n    };\n\n    const swiped = (direction, idToDelete) => {\n        console.log(\"removing: \" + idToDelete);\n        alreadyRemoved.add(idToDelete);\n        console.log(alreadyRemoved);\n        if (direction === \"left\") {\n            addDislike(idToDelete);\n        }\n        if (direction === \"right\") {\n            //if (likedBy.includes(idToDelete)) console.log(\"match!\");\n            addLike(idToDelete);\n        }\n    };\n\n    const swipe = (dir) => {\n        const cardsLeft = people.filter((person) => !alreadyRemoved.has(person.name));\n        if (cardsLeft.length) {\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].id; // Find the card object to be removed\n            const index = people.map((person) => person.id).indexOf(toBeRemoved); // Find the index of which to make the reference to\n            alreadyRemoved.add(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n        }\n    };\n\n    const addLike = (id) => {\n        //swipe(\"right\");\n        sendData([\"like\", { userID: user.id, id: id }]);\n    };\n\n    const addDislike = (id) => {\n        //swipe(\"left\");\n        sendData([\"dislike\", { userID: user.id, id: id }]);\n    };\n\n    /*\n    const SwipeButtons = () => {\n        return (\n            <div className=\"swipeButtons\">\n                <IconButton className=\"swipeButtons__left\" onClick={swipe(\"left\")}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton className=\"swipeButtons__right\" onClick={swipe(\"right\")}>\n                    <FavoriteIcon fontSize=\"large\" />\n                </IconButton>\n            </div>\n        );\n    };\n    */\n\n    return (\n        <div>\n            {isLogin ? (\n                <div className=\"cardContainer\">\n                    {people ? (\n                        people.map((person) =>\n                            alreadyRemoved.has(person.id) ? null : (\n                                <TinderCard\n                                    className=\"swipe\"\n                                    key={person.id}\n                                    onSwipe={(dir) => swiped(dir, person.id)}\n                                    preventSwipe={[\"up\", \"down\"]}\n                                    onCardLeftScreen={() => outOfFrame(person.id)}\n                                >\n                                    <div\n                                        style={{\n                                            backgroundImage: person.photo\n                                                ? `url(${person.photo})`\n                                                : `url(https://i.pinimg.com/originals/7a/98/1d/7a981de80cfa0a7aa92f5d523d3509cc.jpg)`,\n                                        }}\n                                        className=\"card\"\n                                    >\n                                        <h3>{person.name}</h3>\n                                    </div>\n                                </TinderCard>\n                            )\n                        )\n                    ) : (\n                        <div className=\"info\">\n                            <h3>no other user left...</h3>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div className=\"card-box\">\n                    <h3>PLEASE LOGIN!!</h3>\n                    <br></br>\n                    <Link to=\"/loginpage\">\n                        <button className=\"btn-one\" type=\"submit\">\n                            Login\n                        </button>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js",["99","100","101","102"],"import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport useLoginForm from \"./CustomHooksforloginpage\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport \"./loginpage.css\";\n\nconst Loginpage = () => {\n    const login = () => {\n        //     alert(`User Created!\n        // Name: ${inputs.Name}\n        // Sex: ${inputs.Sex}`);\n    };\n\n    const { inputs, toHomePage, handleInputChange, handleSubmit } = useLoginForm({ id: \"\", password: \"\" }, login);\n\n    return toHomePage ? (\n        <Redirect to=\"/\" />\n    ) : (\n        <div className=\"section is-fullheight\">\n            <div className=\"container\">\n                <div className=\"column is-4 is-offset-4\">\n                    <div className=\"box\">\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\n                            <div className=\"field\">\n                                <h3 className=\"label\">User Id</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"text\"\n                                        name=\"id\"\n                                        onChange={handleInputChange}\n                                        value={inputs.id}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <h3 className=\"label\">Password</h3>\n                                <div className=\"control\">\n                                    <input\n                                        className=\"input\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        onChange={handleInputChange}\n                                        value={inputs.password}\n                                    />\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <button className=\"btn-one\" type=\"submit\">\n                                Login\n                            </button>\n                            <h3>Has no account?</h3>\n                            <Link to=\"/signuppage\">\n                                <button className=\"btn\">Sign up</button>\n                            </Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loginpage;\n\n{\n    /* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */\n}\n","/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js",["117","118","119"],"/Users/fionawu/Desktop/courses/webProgramming/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js",["120","121"],"import {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useSignUpForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [photo, setPhoto] = useState(null)\n  const [photodata, setPhotodata] = useState(null)\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_signup\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n            if (msg===\"Sign up sucessfully\"){\n              setToHomePage(true)\n            }\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserSignup = (userinfo,photodata)=> {\n    let { Name, Sex, id, password1 } = userinfo;\n    let userdata={ \"name\":Name, \"sex\": Sex, \"id\":id, \"password\": password1, \"photodata\": photodata}\n    sendData(  [\"setUser\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs,photodata)\n\n    // await searchid(inputs.id);\n\n\n    sendUserSignup(inputs,photodata)\n\n    console.log(\"her777777e\")\n    setInputs(initialValues)\n    setPhoto(null)\n    setPhotodata(null)\n\n\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  const handlePhotoInputChange = (event) => {\n    event.persist();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    reader.onloadend = () =>{\n      setPhoto(file)\n      setPhotodata(reader.result)\n    }\n    reader.readAsDataURL(file);\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    handlePhotoInputChange,\n    inputs,\n    photo,\n    photodata,\n    toHomePage\n  };\n}\nexport default useSignUpForm;",{"ruleId":"122","severity":1,"message":"123","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":23},{"ruleId":"122","severity":1,"message":"126","line":12,"column":50,"nodeType":"124","messageId":"125","endLine":12,"endColumn":54},{"ruleId":"122","severity":1,"message":"127","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"128","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":26},{"ruleId":"122","severity":1,"message":"129","line":16,"column":9,"nodeType":"124","messageId":"125","endLine":16,"endColumn":14},{"ruleId":"122","severity":1,"message":"130","line":24,"column":11,"nodeType":"124","messageId":"125","endLine":24,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":135,"column":1,"nodeType":"133","messageId":"134","endLine":142,"endColumn":2},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"122","severity":1,"message":"139","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"140","line":2,"column":19,"nodeType":"124","messageId":"125","endLine":2,"endColumn":25},{"ruleId":"141","severity":1,"message":"142","line":14,"column":5,"nodeType":"143","messageId":"144","endLine":32,"endColumn":6},{"ruleId":"122","severity":1,"message":"145","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"127","line":1,"column":28,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"145","line":2,"column":17,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"146","line":7,"column":9,"nodeType":"124","messageId":"125","endLine":7,"endColumn":15},{"ruleId":"122","severity":1,"message":"147","line":20,"column":12,"nodeType":"124","messageId":"125","endLine":20,"endColumn":20},{"ruleId":"122","severity":1,"message":"148","line":20,"column":22,"nodeType":"124","messageId":"125","endLine":20,"endColumn":33},{"ruleId":"122","severity":1,"message":"149","line":25,"column":11,"nodeType":"124","messageId":"125","endLine":25,"endColumn":24},{"ruleId":"122","severity":1,"message":"150","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":21},{"ruleId":"122","severity":1,"message":"145","line":1,"column":41,"nodeType":"124","messageId":"125","endLine":1,"endColumn":50},{"ruleId":"122","severity":1,"message":"151","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":18},{"ruleId":"122","severity":1,"message":"152","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":27},{"ruleId":"122","severity":1,"message":"153","line":9,"column":12,"nodeType":"124","messageId":"125","endLine":9,"endColumn":24},{"ruleId":"122","severity":1,"message":"154","line":13,"column":12,"nodeType":"124","messageId":"125","endLine":13,"endColumn":19},{"ruleId":"122","severity":1,"message":"155","line":14,"column":12,"nodeType":"124","messageId":"125","endLine":14,"endColumn":16},{"ruleId":"122","severity":1,"message":"156","line":69,"column":11,"nodeType":"124","messageId":"125","endLine":69,"endColumn":16},{"ruleId":"122","severity":1,"message":"157","line":73,"column":19,"nodeType":"124","messageId":"125","endLine":73,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":110,"column":33,"nodeType":"160","endLine":110,"endColumn":101},{"ruleId":"122","severity":1,"message":"127","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"140","line":2,"column":20,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"128","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":69,"column":1,"nodeType":"133","messageId":"134","endLine":76,"endColumn":2},{"ruleId":"122","severity":1,"message":"150","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":21},{"ruleId":"122","severity":1,"message":"145","line":1,"column":33,"nodeType":"124","messageId":"125","endLine":1,"endColumn":42},{"ruleId":"122","severity":1,"message":"128","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"161","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":18},{"ruleId":"122","severity":1,"message":"151","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":18},{"ruleId":"122","severity":1,"message":"152","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":27},{"ruleId":"122","severity":1,"message":"162","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":30},{"ruleId":"122","severity":1,"message":"163","line":17,"column":12,"nodeType":"124","messageId":"125","endLine":17,"endColumn":23},{"ruleId":"122","severity":1,"message":"164","line":18,"column":20,"nodeType":"124","messageId":"125","endLine":18,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":30,"column":9,"nodeType":"143","messageId":"144","endLine":75,"endColumn":10},{"ruleId":"122","severity":1,"message":"165","line":49,"column":25,"nodeType":"124","messageId":"125","endLine":49,"endColumn":28},{"ruleId":"122","severity":1,"message":"166","line":70,"column":25,"nodeType":"124","messageId":"125","endLine":70,"endColumn":27},{"ruleId":"122","severity":1,"message":"167","line":70,"column":29,"nodeType":"124","messageId":"125","endLine":70,"endColumn":33},{"ruleId":"122","severity":1,"message":"168","line":78,"column":11,"nodeType":"124","messageId":"125","endLine":78,"endColumn":19},{"ruleId":"122","severity":1,"message":"169","line":17,"column":12,"nodeType":"124","messageId":"125","endLine":17,"endColumn":22},{"ruleId":"122","severity":1,"message":"170","line":17,"column":24,"nodeType":"124","messageId":"125","endLine":17,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":58,"column":13,"nodeType":"173","messageId":"174","endLine":62,"endColumn":14},{"ruleId":"122","severity":1,"message":"140","line":1,"column":19,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"142","line":14,"column":5,"nodeType":"143","messageId":"144","endLine":30,"endColumn":6},"no-unused-vars","'Uploadimagetest' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'photo' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'set' is defined but never used.","'useRef' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","'status' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'displayStatus' is assigned a value but never used.","'useCallback' is defined but never used.","'IconButton' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'selectedFile' is assigned a value but never used.","'likedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'swipe' is assigned a value but never used.","'index' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'imagebuffer' is assigned a value but never used.","'setTestid' is assigned a value but never used.","'_id' is assigned a value but never used.","'id' is assigned a value but never used.","'body' is assigned a value but never used.","'sendtest' is assigned a value but never used.","'chatuserid' is assigned a value but never used.","'setChatuserid' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]