[{"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/index.js":"1","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/App.js":"2","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/reportWebVitals.js":"3","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Header.js":"4","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/userinfo/userinfo.js":"5","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"6","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/client.js":"7","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js":"8","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js":"9","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js":"10","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js":"11","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js":"12","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js":"13","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/card/Card.js":"14"},{"size":510,"mtime":1610978173486,"results":"15","hashOfConfig":"16"},{"size":1723,"mtime":1611129207002,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610976336260,"results":"18","hashOfConfig":"16"},{"size":3041,"mtime":1611129250973,"results":"19","hashOfConfig":"16"},{"size":2123,"mtime":1611065275955,"results":"20","hashOfConfig":"16"},{"size":1964,"mtime":1611069894253,"results":"21","hashOfConfig":"16"},{"size":138,"mtime":1610978173485,"results":"22","hashOfConfig":"16"},{"size":2674,"mtime":1611128807565,"results":"23","hashOfConfig":"16"},{"size":1811,"mtime":1611129035222,"results":"24","hashOfConfig":"16"},{"size":3959,"mtime":1611069894254,"results":"25","hashOfConfig":"16"},{"size":3069,"mtime":1611129206988,"results":"26","hashOfConfig":"16"},{"size":2166,"mtime":1611069894254,"results":"27","hashOfConfig":"16"},{"size":1573,"mtime":1611069894253,"results":"28","hashOfConfig":"16"},{"size":5249,"mtime":1611129206996,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5iz52u",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/index.js",[],["66","67"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/App.js",["68"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/reportWebVitals.js",[],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Header.js",["69"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/userinfo/userinfo.js",["70","71","72","73","74"],"import { useCallback, useState, useRef, useEffect } from 'react'\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\n\nconst client = new WebSocket('ws://localhost:4000')\n\nfunction Userinfo(){ \n    const [selectedFile, setSelectedFile] = useState(null)\n    const [filedata,setFiledata] = useState(null)\n\n    const selectfilebtnRef = useRef( {} );\n\n    const sendData = (data) => {\n        client.send(JSON.stringify( data ))\n    }\n    \n    const sendFile = (file)=>{// actually send image\n        sendData(  [\"sendfile\",file])\n    }\n\n    const fileselectedHandler = async(event)=>{\n        //console.log(event.target.files[0])\n        //setSelectedFile(event.target.files[0])\n        event.preventDefault();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () =>{\n            setSelectedFile(file)\n            setFiledata(reader.result)\n        }\n        reader.readAsDataURL(file);\n    }\n\n    const testclick = ()=>{\n        selectfilebtnRef.current.click();\n        console.log(\"clicks\")\n    }\n\n\n    const fileUploadHandler = ()=>{\n        console.log('Filedata: ',filedata)\n        //console.log(selectedFile)\n        //console.log(\"clicks\")\n        if (!filedata) {\n            console.log('filedata not found')\n            return };\n        sendFile({\"filedata\": filedata})\n        console.log(\"done\")\n        setSelectedFile(null)\n        setFiledata(null)\n        selectfilebtnRef.current.value=null;\n\n        \n    };\n\n    return(\n        <div className=\"App-userinfo\">\n            <input \n              style={{display: 'none'}} \n              type=\"file\" \n              onChange={(e)=> fileselectedHandler(e)}\n              ref={selectfilebtnRef}\n              />\n            \n            <button onClick={testclick}>Pick files </button>\n            <button onClick={fileUploadHandler}>Upload </button>\n\n            {filedata? <img src={filedata} className='rounded mx-auto d-block' alt='figure' /> : null}\n        </div>\n    )\n    \n\n\n}\n\n\n\n\nexport default Userinfo;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["75","76","77","78"],"import { useCallback, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\n\nconst client = new WebSocket(\"ws://localhost:4000\");\n\nfunction Accountinterface() {\n    const [imagebuffer, setImagebuffer] = useState(null);\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"Image\": {\n                console.log(\"receive: Image\");\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\n                setImagebuffer(imagebuffer);\n\n                break;\n            }\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    var Hi_url = \"60040f3741ef153e7cd5e71f\";\n    //sendData(['getImageByID',{_id: Hi_url}])\n    const getphoto = async () => {\n        sendData([\"getImageByID\", { ImageID: Hi_url }]);\n        console.log(imagebuffer);\n    };\n\n    return (\n        <div className=\"App-accountinterface\">\n            <div className=\"profile\">\n                {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\n            </div>\n            <div className=\"setting\">\n                <Link to=\"/loginpage\">\n                    <IconButton>\n                        <SettingsRoundedIcon style={{ fontSize: 40 }} className=\"header__logo\" />\n                    </IconButton>\n                </Link>\n                {imagebuffer ? (\n                    <img src={imagebuffer} className=\"rounded mx-auto d-block\" alt=\"figure\" />\n                ) : (\n                    <p>imagebuffer is null</p>\n                )}\n            </div>\n\n            <button onClick={getphoto}> get photo</button>\n        </div>\n    );\n}\n\nexport default Accountinterface;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/client.js",[],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js",["79","80"],"import './chatscreen.css'\nimport React, { useEffect, useRef, useState } from 'react'\nimport useChat from './useChat'\nimport { Button, Input, message, Tag } from 'antd'\n\nfunction Chatscreen() {\n  const { status, opened, messages, sendMessage, clearMessages } = useChat()\n\n  const [username, setUsername] = useState('')\n  const [body, setBody] = useState('')\n  const [fromId,setFromId] = useState('3')\n  const [toId,setToId] = useState('9')\n  const bodyRef = useRef(null)\n\n  const displayStatus = (s) => {\n    if (s.msg) {\n      const { type, msg } = s\n      const content = {\n        content: msg,\n        duration: 0.5\n      }\n\n      switch (type) {\n        case 'success':\n          message.success(content)\n          break\n        case 'info':\n          message.info(content)\n          break\n        case 'danger':\n        default:\n          message.error(content)\n          break\n      }\n    }\n  }\n  \n  const test = () =>{\n    console.log('length of msg', messages.length)\n  }\n  \n\n  useEffect(() => {\n    displayStatus(status)\n  }, [status])\n\n  //console.log('length of msg', messages.length)\n\n  return (\n    <div className=\"App-chatscreen\">\n        <button onClick={test}></button>\n      <div className=\"App-title\">\n        <h1>Chat Room</h1>\n        <Button type=\"primary\" danger onClick={clearMessages}>\n          Clear\n        </Button>\n      </div>\n      <div className=\"App-messages\">\n\n        {messages.length === 0 ? (\n          <p style={{ color: '#ccc' }}>\n            {opened? 'No messages...' : 'Loading...'}\n          </p>\n        ) : (\n          messages.map(({ body }, i) => (\n            <p className=\"App-message\" key={i}>\n              <Tag color=\"blue\">Toby</Tag> {body}\n            </p>\n          ))\n        )}\n      </div>\n      \n      <Input\n        \n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        style={{ marginBottom: 10 }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            bodyRef.current.focus()\n          }\n        }}\n      ></Input>\n      \n      <Input.Search\n        rows={4}\n        value={body}\n        ref={bodyRef}\n        enterButton=\"Send\"\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Type a message here...\"\n        onSearch={(msg) => {\n          if (!msg || !username) {\n            displayStatus({\n              type: 'error',\n              msg: 'Please enter a username and a message body.'\n            })\n            return\n          }\n        \n          sendMessage({ fromId:fromId , toId:toId, body:body})\n          setBody('')\n        }}\n      ></Input.Search>\n    </div>\n  )\n}\n\nexport default Chatscreen\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js",["81","82","83"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js",["84","85","86","87","88"],"import React from 'react';\nimport { useState, useRef} from 'react'\nimport useSignUpForm from './CustomHooks';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from 'react-router'\n\nconst Signuppage = () => {\n  const signup = () => {\n//     alert(`User Created! \n// Name: ${inputs.Name}\n// Sex: ${inputs.Sex}`);\n  }\n  const {inputs, photo, photodata, toHomePage, handleInputChange, handlePhotoInputChange, handleSubmit} = useSignUpForm({Name: '', Sex: '', id: '', password1: '', password2: ''}, signup);\n  const selectfilebtnRef = useRef( {} );\n  const clickselectphoto = ()=>{\n    //selectfilebtnRef.current.click();\n    console.log(\"clickselectphoto\")\n}\n  return (\n    toHomePage?<Redirect to='/'/>:\n    <div className=\"section is-fullheight\">\n      <div className=\"container\">\n        <div className=\"column is-4 is-offset-4\">\n          <div className=\"box\">\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Name</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"Name\" onChange={handleInputChange} value={inputs.Name} required />\n                </div>\n              </div>\n              \n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Sex</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"Sex\" onChange={handleInputChange} value={inputs.Sex} required />\n                </div>\n              </div>\n              \n              <div className=\"field\">\n                <label className=\"label has-text-centered\">id</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"id\" onChange={handleInputChange} value={inputs.id} required />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Password</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"password\" name=\"password1\" onChange={handleInputChange} value={inputs.password1}/>\n                </div>\n              </div>\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Re-enter Password</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"password\" name=\"password2\" onChange={handleInputChange} value={inputs.password2}/>\n                </div>\n              </div>\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Photo</label>\n                <div className=\"control\">\n                  <input className=\"input\" \n                    style={{display: ''}}\n                    type=\"file\"  \n                    onChange={handlePhotoInputChange}\n                    ref={selectfilebtnRef}\n                  /> \n                  {/*<button className=\"btn_for_select_photo\" onClick={clickselectphoto}>Pick Photo </button>*/}\n                </div>\n              </div>\n              <button className=\"button is-block is-fullwidth is-success\" type=\"submit\">Sign Up</button>\n              <p>Has no account?</p> \n              <Link to=\"/loginpage\">\n                    <button>Log in Page</button>\n              </Link>\n            </form>\n            {photodata? <img src={photodata} className='rounded mx-auto d-block' alt='figure' /> : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Signuppage;\n\n\n{/* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */}","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js",["89","90","91","92"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js",["93","94"],"import {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useSignUpForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [photo, setPhoto] = useState(null)\n  const [photodata, setPhotodata] = useState(null)\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_signup\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n            if (msg===\"Sign up sucessfully\"){\n              setToHomePage(true)\n            }\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserSignup = (userinfo,photodata)=> {\n    let { Name, Sex, id, password1 } = userinfo;\n    let userdata={ \"name\":Name, \"sex\": Sex, \"id\":id, \"password\": password1, \"photodata\": photodata}\n    sendData(  [\"setUser\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs,photodata)\n\n    // await searchid(inputs.id);\n\n\n    sendUserSignup(inputs,photodata)\n\n    console.log(\"her777777e\")\n    setInputs(initialValues)\n    setPhoto(null)\n    setPhotodata(null)\n\n\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  const handlePhotoInputChange = (event) => {\n    event.persist();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    reader.onloadend = () =>{\n      setPhoto(file)\n      setPhotodata(reader.result)\n    }\n    reader.readAsDataURL(file);\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    handlePhotoInputChange,\n    inputs,\n    photo,\n    photodata,\n    toHomePage\n  };\n}\nexport default useSignUpForm;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js",["95","96","97"],"import { set } from 'mongoose';\nimport {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useLoginForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_login\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n\n            if (msg===\"Welcome\"){\n              setToHomePage(true)\n            }\n\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserLogin = (userinfo)=> {\n    let { id, password} = userinfo;\n    let userdata={  \"id\":id, \"password\": password}\n    sendData(  [\"userLogin\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs)\n    sendUserLogin(inputs)\n    setInputs(initialValues)\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  \n  return {\n    handleSubmit,\n    handleInputChange, \n    inputs,\n    toHomePage\n  };\n}\nexport default useLoginForm;",["98","99"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/card/Card.js",["100","101","102","103","104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":13,"column":50,"nodeType":"113","messageId":"114","endLine":13,"endColumn":54},{"ruleId":"115","severity":1,"message":"116","line":23,"column":9,"nodeType":"117","messageId":"118","endLine":31,"endColumn":10},{"ruleId":"111","severity":1,"message":"119","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":21},{"ruleId":"111","severity":1,"message":"120","line":1,"column":41,"nodeType":"113","messageId":"114","endLine":1,"endColumn":50},{"ruleId":"111","severity":1,"message":"121","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"122","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":27},{"ruleId":"111","severity":1,"message":"123","line":9,"column":12,"nodeType":"113","messageId":"114","endLine":9,"endColumn":24},{"ruleId":"111","severity":1,"message":"119","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":21},{"ruleId":"111","severity":1,"message":"120","line":1,"column":33,"nodeType":"113","messageId":"114","endLine":1,"endColumn":42},{"ruleId":"111","severity":1,"message":"124","line":2,"column":16,"nodeType":"113","messageId":"114","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":24,"endColumn":10},{"ruleId":"111","severity":1,"message":"125","line":11,"column":17,"nodeType":"113","messageId":"114","endLine":11,"endColumn":26},{"ruleId":"111","severity":1,"message":"126","line":12,"column":15,"nodeType":"113","messageId":"114","endLine":12,"endColumn":22},{"ruleId":"111","severity":1,"message":"127","line":24,"column":16,"nodeType":"113","messageId":"114","endLine":24,"endColumn":18},{"ruleId":"111","severity":1,"message":"128","line":24,"column":20,"nodeType":"113","messageId":"114","endLine":24,"endColumn":26},{"ruleId":"111","severity":1,"message":"129","line":24,"column":28,"nodeType":"113","messageId":"114","endLine":24,"endColumn":32},{"ruleId":"111","severity":1,"message":"130","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":18},{"ruleId":"111","severity":1,"message":"124","line":4,"column":16,"nodeType":"113","messageId":"114","endLine":4,"endColumn":26},{"ruleId":"111","severity":1,"message":"131","line":13,"column":18,"nodeType":"113","messageId":"114","endLine":13,"endColumn":23},{"ruleId":"111","severity":1,"message":"132","line":15,"column":9,"nodeType":"113","messageId":"114","endLine":15,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":88,"column":1,"nodeType":"135","messageId":"136","endLine":93,"endColumn":25},{"ruleId":"111","severity":1,"message":"130","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":18},{"ruleId":"111","severity":1,"message":"137","line":2,"column":20,"nodeType":"113","messageId":"114","endLine":2,"endColumn":26},{"ruleId":"111","severity":1,"message":"124","line":4,"column":16,"nodeType":"113","messageId":"114","endLine":4,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":69,"column":1,"nodeType":"135","messageId":"136","endLine":76,"endColumn":2},{"ruleId":"111","severity":1,"message":"137","line":1,"column":19,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":14,"column":5,"nodeType":"117","messageId":"118","endLine":30,"endColumn":6},{"ruleId":"111","severity":1,"message":"138","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"137","line":2,"column":19,"nodeType":"113","messageId":"114","endLine":2,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":14,"column":5,"nodeType":"117","messageId":"118","endLine":32,"endColumn":6},{"ruleId":"107","replacedBy":"139"},{"ruleId":"109","replacedBy":"140"},{"ruleId":"111","severity":1,"message":"120","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"141","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"142","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"111","severity":1,"message":"121","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":18},{"ruleId":"111","severity":1,"message":"143","line":14,"column":12,"nodeType":"113","messageId":"114","endLine":14,"endColumn":16},{"ruleId":"111","severity":1,"message":"144","line":74,"column":11,"nodeType":"113","messageId":"114","endLine":74,"endColumn":16},{"ruleId":"111","severity":1,"message":"145","line":78,"column":19,"nodeType":"113","messageId":"114","endLine":78,"endColumn":24},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'selectedFile' is assigned a value but never used.","'useHistory' is defined but never used.","'setFromId' is assigned a value but never used.","'setToId' is assigned a value but never used.","'Id' is assigned a value but never used.","'fromId' is assigned a value but never used.","'toId' is assigned a value but never used.","'useState' is defined but never used.","'photo' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useRef' is defined but never used.","'set' is defined but never used.",["146"],["147"],"'CloseIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'like' is assigned a value but never used.","'swipe' is assigned a value but never used.","'index' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]