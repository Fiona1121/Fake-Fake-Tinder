[{"C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\App.js":"3","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\client.js":"4","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\Header.js":"5","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\card\\Card.js":"6","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\uploadimagetest\\uploadimagetest.js":"7","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\accountinterface\\accountinterface.js":"8","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\signuppage\\signuppage.js":"9","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\loginipage\\loginpage.js":"10","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\loginipage\\CustomHooksforloginpage.js":"11","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\accountinterface\\userinfo.js":"12","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\signuppage\\CustomHooks.js":"13","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\chatscreen\\chatscreen.js":"14","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\chatscreen\\useChat.js":"15"},{"size":527,"mtime":1611193678240,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1611193578441,"results":"18","hashOfConfig":"17"},{"size":2108,"mtime":1611217727975,"results":"19","hashOfConfig":"17"},{"size":142,"mtime":1611193678173,"results":"20","hashOfConfig":"17"},{"size":4143,"mtime":1611217727991,"results":"21","hashOfConfig":"17"},{"size":5760,"mtime":1611217728078,"results":"22","hashOfConfig":"17"},{"size":2202,"mtime":1611194854105,"results":"23","hashOfConfig":"17"},{"size":5978,"mtime":1611217728192,"results":"24","hashOfConfig":"17"},{"size":7120,"mtime":1611194854082,"results":"25","hashOfConfig":"17"},{"size":3156,"mtime":1611194854072,"results":"26","hashOfConfig":"17"},{"size":1636,"mtime":1611193678213,"results":"27","hashOfConfig":"17"},{"size":3882,"mtime":1611217728046,"results":"28","hashOfConfig":"17"},{"size":2525,"mtime":1611194854075,"results":"29","hashOfConfig":"17"},{"size":4265,"mtime":1611217728110,"results":"30","hashOfConfig":"17"},{"size":3026,"mtime":1611217728131,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1wtr7zc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"34"},"C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\index.js",[],["76","77"],"C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\App.js",["78","79"],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport client from \"./client\";\r\nimport Accountinterface from \"./container/accountinterface/accountinterface\";\r\nimport Uploadimagetest from \"./container/uploadimagetest/uploadimagetest\"; //用不到\r\n\r\nimport Loginpage from \"./container/login/loginipage/loginpage\";\r\nimport Signuppage from \"./container/login/signuppage/signuppage\";\r\nimport Chatscreen from \"./container/chatscreen/chatscreen\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Card from \"./container/card/Card\";\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState({});\r\n    client.onmessage = (message) => {\r\n        const { data } = message;\r\n        const [task, payload] = JSON.parse(data);\r\n\r\n        switch (task) {\r\n            case \"setAppUser\": {\r\n                console.log(\"set user\");\r\n                setUser(payload[0]);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/chats\">\r\n                        <Header mode=\"chat\" backButton=\"/\" />\r\n                        <Chatscreen />\r\n                    </Route>\r\n                    <Route path=\"/accounts\">\r\n                        <Header mode=\"account\" backButton=\"/\" userID={user.id} />\r\n                        <Accountinterface user={user} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/\">\r\n                        <Header mode=\"main\" backButton=\"\" userID={user.id} />\r\n                        <Card userID={user.id} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/loginpage\">\r\n                        <Loginpage />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/signuppage\">\r\n                        <Signuppage />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\client.js",[],"C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\Header.js",["80","81"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\"; //account button\r\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\"; //chat button\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\"; //return button\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\"; //return button\r\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\"; //main page button\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport client from \"./client\";\r\n\r\nfunction Header({ mode, backButton, userID }) {\r\n    console.log(\"header: user\", userID);\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({ id: userID });\r\n    const sendData = (data) => {\r\n        client.send(JSON.stringify(data));\r\n    };\r\n    client.onmessage = (message) => {\r\n        const { data } = message;\r\n        const [task, payload] = JSON.parse(data);\r\n\r\n        switch (task) {\r\n            case \"initHeader\": {\r\n                console.log(\"init header user\", payload);\r\n                setUser(() => payload);\r\n                break;\r\n            }\r\n            case \"Accountsettup\": {\r\n                console.log(\"In Header\");\r\n                console.log(\"Accountsettup\");\r\n                console.log(payload[0]);\r\n                //setUser({ id: payload.id });\r\n                setUser(payload[0]);\r\n                break;\r\n            }\r\n            case \"initCard\": {\r\n                //setPeople(() => payload);\r\n                console.log(\"Header accept\");\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    var reloadMain = () => {\r\n        sendData([\"getUser\", { userID: user.id }]);\r\n        sendData([\"getCards\", { userID: user.id }]);\r\n    };\r\n    var reloadAccountinterface = async () => {\r\n        await sendData([\"getUser\", { userID: user.id }]);\r\n        await sendData([\"Accountinterface_getUser\", { userID: user.id }]);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                {mode === \"chat\" ? (\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            history.replace(backButton);\r\n                            reloadMain();\r\n                        }}\r\n                    >\r\n                        <ArrowBackIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\r\n                    </IconButton>\r\n                ) : (\r\n                    <Link to=\"/accounts\">\r\n                        <IconButton onClick={() => sendData([\"Accountinterface_getUser\", { userID: user.id }])}>\r\n                            {\" \"}\r\n                            {/* 我的db裡有891206的id*/}\r\n                            <AccountCircleOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\r\n                        </IconButton>\r\n                    </Link>\r\n                )}\r\n\r\n                <Link to=\"/\">\r\n                    <IconButton onClick={() => reloadMain()}>\r\n                        <FavoriteTwoToneIcon style={{ fontSize: 45 }} color=\"secondary\" className=\"header__logo\" />\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                {mode === \"account\" ? (\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            history.replace(backButton);\r\n                            reloadMain();\r\n                        }}\r\n                    >\r\n                        <ArrowForwardIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\r\n                    </IconButton>\r\n                ) : (\r\n                    <Link to=\"/chats\">\r\n                        <IconButton>\r\n                            <ForumOutlinedIcon className=\"header__icon\" fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n            <p>{userID}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\card\\Card.js",["82","83","84","85","86","87","88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport \"./Card.css\";\r\nimport client from \"../../client\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst alreadyRemoved = new Set();\r\nvar isLogin = false;\r\n\r\nconst Card = ({ userID }) => {\r\n    const [people, setPeople] = useState([]);\r\n    const [likedBy, setLikedBy] = useState([]);\r\n    const [like, setLike] = useState([]);\r\n    const [user, setUser] = useState({ id: userID });\r\n\r\n    const sendData = (data) => {\r\n        client.send(JSON.stringify(data));\r\n    };\r\n    client.onopen = () => sendData([\"getCards\", { userID: user.id }]);\r\n    client.onmessage = (message) => {\r\n        const { data } = message;\r\n        const [task, payload] = JSON.parse(data);\r\n\r\n        switch (task) {\r\n            case \"setCardUser\": {\r\n                console.log(\"set user\", payload[0].id);\r\n                isLogin = true;\r\n                setUser({ id: payload[0].id });\r\n                setLike(payload[0].like);\r\n                setLikedBy(payload[0].likedBy);\r\n                sendData([\"getCards\", { userID: payload[0].id }]);\r\n                sendData([\"initHeader\", { userID: payload[0].id }]);\r\n                break;\r\n            }\r\n            case \"initCard\": {\r\n                setPeople(() => payload);\r\n                console.log(\"Card accept init card\")\r\n                break;\r\n            }\r\n            case \"likeList\": {\r\n                setLike(() => payload);\r\n                break;\r\n            }\r\n            case \"likedByList\": {\r\n                setLikedBy(() => payload);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const outOfFrame = (id) => {\r\n        console.log(id + \" left the screen!\");\r\n    };\r\n\r\n    const swiped = (direction, idToDelete) => {\r\n        console.log(\"removing: \" + idToDelete);\r\n        alreadyRemoved.add(idToDelete);\r\n        console.log(alreadyRemoved);\r\n        if (direction === \"left\") {\r\n            addDislike(idToDelete);\r\n        }\r\n        if (direction === \"right\") {\r\n            //if (likedBy.includes(idToDelete)) console.log(\"match!\");\r\n            addLike(idToDelete);\r\n        }\r\n    };\r\n\r\n    const swipe = (dir) => {\r\n        const cardsLeft = people.filter((person) => !alreadyRemoved.has(person.name));\r\n        if (cardsLeft.length) {\r\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].id; // Find the card object to be removed\r\n            const index = people.map((person) => person.id).indexOf(toBeRemoved); // Find the index of which to make the reference to\r\n            alreadyRemoved.add(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n        }\r\n    };\r\n\r\n    const addLike = (id) => {\r\n        //swipe(\"right\");\r\n        sendData([\"like\", { userID: user.id, id: id }]);\r\n    };\r\n\r\n    const addDislike = (id) => {\r\n        //swipe(\"left\");\r\n        sendData([\"dislike\", { userID: user.id, id: id }]);\r\n    };\r\n\r\n    /*\r\n    const SwipeButtons = () => {\r\n        return (\r\n            <div className=\"swipeButtons\">\r\n                <IconButton className=\"swipeButtons__left\" onClick={swipe(\"left\")}>\r\n                    <CloseIcon fontSize=\"large\" />\r\n                </IconButton>\r\n                <IconButton className=\"swipeButtons__right\" onClick={swipe(\"right\")}>\r\n                    <FavoriteIcon fontSize=\"large\" />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    };\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            {isLogin ? (\r\n                <div className=\"cardContainer\">\r\n                    {people ? (\r\n                        people.map((person) =>\r\n                            alreadyRemoved.has(person.id) ? null : (\r\n                                <TinderCard\r\n                                    className=\"swipe\"\r\n                                    key={person.id}\r\n                                    onSwipe={(dir) => swiped(dir, person.id)}\r\n                                    preventSwipe={[\"up\", \"down\"]}\r\n                                    onCardLeftScreen={() => outOfFrame(person.id)}\r\n                                >\r\n                                    <div\r\n                                        style={{\r\n                                            backgroundImage: person.photo\r\n                                                ? `url(${person.photo})`\r\n                                                : `url(https://i.pinimg.com/originals/7a/98/1d/7a981de80cfa0a7aa92f5d523d3509cc.jpg)`,\r\n                                        }}\r\n                                        className=\"card\"\r\n                                    >\r\n                                        <h3>{person.name}</h3>\r\n                                    </div>\r\n                                </TinderCard>\r\n                            )\r\n                        )\r\n                    ) : (\r\n                        <div className=\"info\">\r\n                            <h3>no other user left...</h3>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div className=\"card-box\">\r\n                    <h3>PLEASE LOGIN!!</h3>\r\n                    <br></br>\r\n                    <Link to=\"/loginpage\">\r\n                        <button className=\"btn-one\" type=\"submit\">\r\n                            Login\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\uploadimagetest\\uploadimagetest.js",["90","91","92","93","94"],"import { useCallback, useState, useRef, useEffect } from 'react'\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\r\n\r\nconst client = new WebSocket('ws://localhost:4000')\r\n\r\nfunction Userinfo(){ \r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const [filedata,setFiledata] = useState(null)\r\n\r\n    const selectfilebtnRef = useRef( {} );\r\n\r\n    const sendData = (data) => {\r\n        client.send(JSON.stringify( data ))\r\n    }\r\n    \r\n    const sendFile = (file)=>{// actually send image\r\n        sendData(  [\"sendfile\",file])\r\n    }\r\n\r\n    const fileselectedHandler = async(event)=>{\r\n        //console.log(event.target.files[0])\r\n        //setSelectedFile(event.target.files[0])\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        reader.onloadend = () =>{\r\n            setSelectedFile(file)\r\n            setFiledata(reader.result)\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    const testclick = ()=>{\r\n        selectfilebtnRef.current.click();\r\n        console.log(\"clicks\")\r\n    }\r\n\r\n\r\n    const fileUploadHandler = ()=>{\r\n        console.log('Filedata: ',filedata)\r\n        //console.log(selectedFile)\r\n        //console.log(\"clicks\")\r\n        if (!filedata) {\r\n            console.log('filedata not found')\r\n            return };\r\n        sendFile({\"filedata\": filedata})\r\n        console.log(\"done\")\r\n        setSelectedFile(null)\r\n        setFiledata(null)\r\n        selectfilebtnRef.current.value=null;\r\n\r\n        \r\n    };\r\n\r\n    return(\r\n        <div className=\"App-userinfo\">\r\n            <input \r\n              style={{display: 'none'}} \r\n              type=\"file\" \r\n              onChange={(e)=> fileselectedHandler(e)}\r\n              ref={selectfilebtnRef}\r\n              />\r\n            \r\n            <button onClick={testclick}>Pick files </button>\r\n            <button onClick={fileUploadHandler}>Upload </button>\r\n\r\n            {filedata? <img src={filedata} className='rounded mx-auto d-block' alt='figure' /> : null}\r\n        </div>\r\n    )\r\n    \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Userinfo;","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\accountinterface\\accountinterface.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import { useCallback, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport \"./accountinterface.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport Userinfo from \"./userinfo\";\r\n\r\n//const client = new WebSocket(\"ws://localhost:4000\");\r\nimport client from \"../../client\";\r\n\r\nvar isLogin = true;\r\n\r\nfunction Accountinterface(props) {\r\n    const [imagebuffer, setImagebuffer] = useState(null);\r\n    const [testid, setTestid] = useState(\"00000000\"); //for broadcasttest\r\n    //const [user,setUser] = useState({id:\"\",name:\"\",photo:\"\",sex:\"\",password:\"\"})\r\n    const [user, setUser] = useState(props.user);\r\n\r\n    const sendData = (data) => {\r\n        client.send(JSON.stringify(data));\r\n    };\r\n\r\n    client.onmessage = (message) => {\r\n        const { data } = message;\r\n        const [task, payload] = JSON.parse(data);\r\n\r\n        switch (task) {\r\n            case \"Accountinterface_setUser\": {\r\n                isLogin = true;\r\n                console.log(\"receive: Accountinterface_setUser\");\r\n                console.log(payload);\r\n                console.log(payload[0]._id);\r\n\r\n                //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\r\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\r\n\r\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\r\n                setUser(payload[0]);\r\n                //sendData([\"initHeader\", { userID: payload[0].id }]);\r\n\r\n                break;\r\n            }\r\n            case \"Accountinterface_updateUser\": {\r\n                console.log(\"receive: Accountinterface_updateUser\");\r\n                //console.log(payload)// is old one\r\n                const { _id } = payload;\r\n\r\n                //sendData(['Accountinterface_getUser',{ userID: }])\r\n\r\n                //const { id, name, photo, sex ,password} = payload[0]; // {imagebuffer:image.buffer}\r\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\r\n\r\n                //setUser({id:id,name:name,photo:photo,sex:sex,password:password})\r\n                //setUser(payload[0])\r\n\r\n                break;\r\n            }\r\n            case \"Image\": {\r\n                console.log(\"receive: Image\");\r\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\r\n                setImagebuffer(imagebuffer);\r\n\r\n                break;\r\n            }\r\n            case `broadcast${testid}`: {\r\n                console.log(`receive: broadcast${testid}`);\r\n                const { id, body } = payload;\r\n                console.log(payload);\r\n\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const sendtest = () => {\r\n        //console.log('sendtest: { id: \"fromid\", body:\"testbody\"}')\r\n        //console.log('sendtest: { userID: \"891206\"}');\r\n        sendData([\"Accountinterface_getUser\", { userID: user.id }]);\r\n    };\r\n    // const sendtest2 = () => {\r\n    //     console.log('sendtest2: { id: \"fromid\", body:\"testbody\"}')\r\n    //     sendData(['sendtest',{ id: testid, body:\"testbody\"}])\r\n    // }\r\n\r\n    // var Hi_url = \"60040f3741ef153e7cd5e71f\";\r\n    // //sendData(['getImageByID',{_id: Hi_url}])\r\n    // const getphoto = async () => {\r\n    //     sendData([\"getImageByID\", { ImageID: Hi_url }]);\r\n    //     console.log(imagebuffer);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            {isLogin ? (\r\n                <div className=\"App-accountinterface card-box\">\r\n                    <div className=\"profile\">\r\n                        {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\r\n                    </div>\r\n                    <br></br>\r\n                    <Userinfo user={user} />\r\n                    <br></br>\r\n                    <div className=\"setting\">\r\n                        <Link to=\"/loginpage\">\r\n                            <button className=\"btn-one\" type=\"submit\">\r\n                                Log Out\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card-box\">\r\n                    <h3>PLEASE LOGIN!!</h3>\r\n                    <br></br>\r\n                    <Link to=\"/loginpage\">\r\n                        <button className=\"btn-one\" type=\"submit\">\r\n                            Login\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accountinterface;\r\n\r\n// <div className=\"settinglist\">\r\n// <ul className=\"todo-app__list\" id=\"todo-list\">\r\n//     <li className=\"todo-app__item\">\r\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n//                 Name\r\n//             </h1>\r\n//             <h2> {user.name}</h2>\r\n//             <Link to=\"/\">\r\n//                 <IconButton>\r\n//                     <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\r\n//                 </IconButton>\r\n//             </Link>\r\n\r\n//     </li>\r\n//     <li className=\"todo-app__item\">\r\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n//                 Sex\r\n//             </h1>\r\n//             <h2> {user.sex}</h2>\r\n//     </li>\r\n//     <li className=\"todo-app__item\">\r\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n//                 ID\r\n//             </h1>\r\n//             <h2> {user.id}</h2>\r\n//     </li>\r\n//     <li className=\"todo-app__item\">\r\n//             <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n//                 Password\r\n//             </h1>\r\n//             <h2> {user.password}</h2>\r\n//     </li>\r\n\r\n// </ul>\r\n// </div>\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\signuppage\\signuppage.js",["109","110","111","112","113","114"],"import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport useSignUpForm from \"./CustomHooks\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport \"./signuppage.css\";\r\n\r\nconst Signuppage = () => {\r\n    const signup = () => {\r\n        //     alert(`User Created!\r\n        // Name: ${inputs.Name}\r\n        // Sex: ${inputs.Sex}`);\r\n    };\r\n    const {\r\n        inputs,\r\n        photo,\r\n        photodata,\r\n        toHomePage,\r\n        selectsex,\r\n        selectsexes,\r\n        handleInputChange,\r\n        handlePhotoInputChange,\r\n        handleSubmit,\r\n        handleSelectsexChange,\r\n    } = useSignUpForm({ Name: \"\", Sex: \"\", id: \"\", password1: \"\", password2: \"\" }, signup);\r\n    const selectfilebtnRef = useRef({});\r\n    const clickselectphoto = () => {\r\n        //selectfilebtnRef.current.click();\r\n        console.log(\"clickselectphoto\");\r\n    };\r\n    return toHomePage ? (\r\n        <Redirect to=\"/\" />\r\n    ) : (\r\n        <div className=\"section is-fullheight\">\r\n            <div className=\"container\">\r\n                <div className=\"column is-4 is-offset-4\">\r\n                    <div className=\"box\">\r\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                            <div className=\"field\">\r\n                                <h3 className=\"h3 has-text-centered\">Name</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"text\"\r\n                                        name=\"Name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.Name}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                {/* <h3 className=\"h3 has-text-centered\">Sex</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"text\"\r\n                                        name=\"Sex\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.Sex}\r\n                                        required\r\n                                    />\r\n                                </div> */}\r\n                                <h3 className=\"h3 has-text-centered\">Sex</h3>\r\n                                <div className=\"control\">\r\n                                    <select onChange={e => handleSelectsexChange(e.target.value)}>\r\n                                        {selectsexes.map((selectsex, i) => {\r\n                                            return <option key={i}>{selectsex}</option>;\r\n                                            })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <h3 className=\"h3 has-text-centered\">id</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"text\"\r\n                                        name=\"id\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.id}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <h3 className=\"h3 has-text-centered\">Password</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"password\"\r\n                                        name=\"password1\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.password1}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <h3 className=\"h3 has-text-centered\">Re-enter Password</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"password\"\r\n                                        name=\"password2\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.password2}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <h3 className=\"h3 has-text-centered\">Photo</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        style={{ display: \"\" }}\r\n                                        type=\"file\"\r\n                                        onChange={handlePhotoInputChange}\r\n                                        ref={selectfilebtnRef}\r\n                                    />\r\n                                    {/*<button className=\"btn_for_select_photo\" onClick={clickselectphoto}>Pick Photo </button>*/}\r\n                                </div>\r\n                            </div>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <button className=\"btn-one\" type=\"submit\">\r\n                                Sign Up\r\n                            </button>\r\n                            <h3>Already has an account?</h3>\r\n                            <Link to=\"/loginpage\">\r\n                                <button className=\"btn\">Login</button>\r\n                            </Link>\r\n                        </form>\r\n                        {photodata ? <img src={photodata} className=\"rounded mx-auto d-block\" alt=\"figure\" /> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signuppage;\r\n\r\n{\r\n    /* <div className=\"field\">\r\n                <label className=\"label has-text-centered\">Email Address</label>\r\n                <div className=\"control\">\r\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\r\n                </div>\r\n              </div> */\r\n}\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\loginipage\\loginpage.js",["115","116","117","118"],"import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport useLoginForm from \"./CustomHooksforloginpage\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport \"./loginpage.css\";\r\n\r\nconst Loginpage = () => {\r\n    const login = () => {\r\n        //     alert(`User Created!\r\n        // Name: ${inputs.Name}\r\n        // Sex: ${inputs.Sex}`);\r\n    };\r\n\r\n    const { inputs, toHomePage, handleInputChange, handleSubmit } = useLoginForm({ id: \"\", password: \"\" }, login);\r\n\r\n    return toHomePage ? (\r\n        <Redirect to=\"/\" />\r\n    ) : (\r\n        <div className=\"section is-fullheight\">\r\n            <div className=\"container\">\r\n                <div className=\"column is-4 is-offset-4\">\r\n                    <div className=\"box\">\r\n                        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                            <div className=\"field\">\r\n                                <h3 className=\"label\">User Id</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"text\"\r\n                                        name=\"id\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.id}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <h3 className=\"label\">Password</h3>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        className=\"input\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        onChange={handleInputChange}\r\n                                        value={inputs.password}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <button className=\"btn-one\" type=\"submit\">\r\n                                Login\r\n                            </button>\r\n                            <h3>Has no account?</h3>\r\n                            <Link to=\"/signuppage\">\r\n                                <button className=\"btn\">Sign up</button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loginpage;\r\n\r\n{\r\n    /* <div className=\"field\">\r\n                <label className=\"label has-text-centered\">Email Address</label>\r\n                <div className=\"control\">\r\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\r\n                </div>\r\n              </div> */\r\n}\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\loginipage\\CustomHooksforloginpage.js",["119","120","121"],"import { set } from 'mongoose';\r\nimport {useState, useRef} from 'react';\r\nimport client from \"../../../client\";\r\n\r\nconst useLoginForm = (initialValues, callback) => {\r\n  const [inputs, setInputs] = useState(initialValues);\r\n  const [toHomePage, setToHomePage] = useState(false);\r\n  \r\n  \r\n  client.onmessage = (message) => {\r\n    const { data } = message;\r\n    const [task, payload] = JSON.parse(data);\r\n\r\n    switch (task) {\r\n        case \"response_for_login\": {\r\n            const {msg} = payload; \r\n            console.log(msg);\r\n            alert(`${msg}`);\r\n            // if(msg===\"Sign up sucessfully\"){\r\n            //   console.log(\"here\")\r\n            //   setInputs(initialValues)\r\n            //   setPhoto(null)\r\n            //   setPhotodata(null)\r\n            // }\r\n\r\n            if (msg===\"Welcome\"){\r\n              setToHomePage(true)\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n  };\r\n\r\n\r\n  const sendData = (data) => {\r\n    client.send(JSON.stringify(data));\r\n  };\r\n  const sendUserLogin = (userinfo)=> {\r\n    let { id, password} = userinfo;\r\n    let userdata={  \"id\":id, \"password\": password}\r\n    sendData(  [\"userLogin\",userdata])\r\n  }\r\n\r\n  const handleSubmit = async(event) => {\r\n    if (event) event.preventDefault();\r\n      callback();\r\n    console.log(inputs)\r\n    sendUserLogin(inputs)\r\n    setInputs(initialValues)\r\n  }\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\r\n  }\r\n  \r\n  return {\r\n    handleSubmit,\r\n    handleInputChange, \r\n    inputs,\r\n    toHomePage\r\n  };\r\n}\r\nexport default useLoginForm;","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\accountinterface\\userinfo.js",["122","123"],"import { useState, useRef } from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./userinfo.css\";\r\n\r\nimport client from \"../../client\";\r\n\r\nconst Userinfo = (props) => {\r\n    const { user } = props;\r\n    const inputRef = useRef({});\r\n\r\n    const [info_be_setting, setInfo_be_setting] = useState(\"none\");\r\n    const [infoinput, setInfoinput] = useState(\"\");\r\n    const [placeholder, setPlaceholder] = useState(\"\");\r\n\r\n    const setinfo = (info, originalvalue) => {\r\n        //info like: name, sex ...\r\n        //console.log()                    // originvalue like: Toby,male\r\n        setInfo_be_setting(info);\r\n        setPlaceholder(originalvalue);\r\n    };\r\n\r\n    const sendData = (data) => {\r\n        client.send(JSON.stringify(data));\r\n    };\r\n    const sendupdateinfo = (msg) => {\r\n        sendData([\"Accountinterface_updateUser\", msg]);\r\n    };\r\n\r\n    const updateinfo = () => {\r\n        //console.log(infoinput)\r\n        console.log(\"updateinfo\");\r\n\r\n        sendupdateinfo({ user_id: user._id, id: user.id, infotobeupdate: info_be_setting, newvalue: infoinput });\r\n\r\n        setInfo_be_setting(\"none\");\r\n    };\r\n\r\n    return info_be_setting !== \"none\" ? (\r\n        <div>\r\n            <p> {info_be_setting} </p>\r\n            <div className=\"App-userinfo\">\r\n                <input\r\n                    style={{ display: \"\" }}\r\n                    type=\"text\"\r\n                    value={infoinput}\r\n                    onChange={(e) => setInfoinput(e.target.value)}\r\n                    placeholder={placeholder}\r\n                    ref={inputRef}\r\n                />\r\n\r\n                <button onClick={updateinfo}>upload</button>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"settinglist\">\r\n            <ul className=\"todo-app__list\" id=\"todo-list\">\r\n                <li className=\"todo-app__item\">\r\n                    <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n                        Name\r\n                    </h1>\r\n                    <h2> {user.name}</h2>\r\n\r\n                    <IconButton onClick={() => setinfo(\"name\", user.name)}>\r\n                        <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\r\n                    </IconButton>\r\n                </li>\r\n                <li className=\"todo-app__item\">\r\n                    <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n                        Sex\r\n                    </h1>\r\n                    <h2> {user.sex}</h2>\r\n\r\n                    <IconButton onClick={() => setinfo(\"sex\", user.sex)}>\r\n                        <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\r\n                    </IconButton>\r\n                </li>\r\n                <li className=\"todo-app__item\">\r\n                    <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n                        ID\r\n                    </h1>\r\n                    <h2> {user.id}</h2>\r\n                    <IconButton onClick={() => setinfo(\"id\", user.id)}>\r\n                        <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\r\n                    </IconButton>\r\n                </li>\r\n                <li className=\"todo-app__item\">\r\n                    <h1 id=\"header_one_0\" className=\"todo-app__item-detail\">\r\n                        Password\r\n                    </h1>\r\n                    <h2> {user.password}</h2>\r\n                    <IconButton onClick={() => setinfo(\"password\", user.password)}>\r\n                        <KeyboardArrowRightIcon style={{ fontSize: 30 }} className=\"header__logo\" />\r\n                    </IconButton>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Userinfo;\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\login\\signuppage\\CustomHooks.js",["124","125","126","127"],"import {useState, useRef} from 'react';\r\nimport client from \"../../../client\";\r\n\r\nconst useSignUpForm = (initialValues, callback) => {\r\n  const [inputs, setInputs] = useState(initialValues);\r\n  const [photo, setPhoto] = useState(null)\r\n  const [photodata, setPhotodata] = useState(null)\r\n  const [toHomePage, setToHomePage] = useState(false);\r\n\r\n  const [selectsex,setSelectsex] = useState(\"\")\r\n  const [selectsexes,setSelectsexes] = useState([\"male\",\"female\"])\r\n\r\n  const handleSelectsexChange = async(value) => {\r\n    await setSelectsex(value)\r\n  }\r\n  \r\n  client.onmessage = (message) => {\r\n    const { data } = message;\r\n    const [task, payload] = JSON.parse(data);\r\n\r\n    switch (task) {\r\n        case \"response_for_signup\": {\r\n            const {msg} = payload; \r\n            console.log(msg);\r\n            alert(`${msg}`);\r\n            // if(msg===\"Sign up sucessfully\"){\r\n            //   console.log(\"here\")\r\n            //   setInputs(initialValues)\r\n            //   setPhoto(null)\r\n            //   setPhotodata(null)\r\n            // }\r\n            if (msg===\"Sign up sucessfully\"){\r\n              setToHomePage(true)\r\n            }\r\n            break;\r\n        }\r\n    }\r\n  };\r\n\r\n\r\n  const sendData = (data) => {\r\n    client.send(JSON.stringify(data));\r\n  };\r\n  const sendUserSignup = (userinfo,photodata)=> {\r\n    let { Name, Sex, id, password1 } = userinfo;\r\n    let userdata={ \"name\":Name, \"sex\": selectsex, \"id\":id, \"password\": password1, \"photodata\": photodata}\r\n    sendData(  [\"setUser\",userdata])\r\n  }\r\n\r\n  const handleSubmit = async(event) => {\r\n    if (event) event.preventDefault();\r\n      callback();\r\n    console.log(inputs,photodata)\r\n\r\n    // await searchid(inputs.id);\r\n\r\n\r\n    sendUserSignup(inputs,photodata)\r\n\r\n    console.log(\"her777777e\")\r\n    setInputs(initialValues)\r\n    setPhoto(null)\r\n    setPhotodata(null)\r\n\r\n\r\n  }\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\r\n  }\r\n  const handlePhotoInputChange = (event) => {\r\n    event.persist();\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n    reader.onloadend = () =>{\r\n      setPhoto(file)\r\n      setPhotodata(reader.result)\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n  return {\r\n    handleSubmit,\r\n    handleInputChange,\r\n    handlePhotoInputChange,\r\n    handleSelectsexChange,\r\n    selectsex,\r\n    selectsexes,\r\n    inputs,\r\n    photo,\r\n    photodata,\r\n    toHomePage\r\n  };\r\n}\r\nexport default useSignUpForm;",["128","129"],"C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\chatscreen\\chatscreen.js",["130","131","132","133","134"],"import \"./chatscreen.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport useChat from \"./useChat\";\r\nimport { Button, Input, message, Tag } from \"antd\";\r\nfunction Chatscreen() {\r\n    const {\r\n        status,\r\n        opened,\r\n        messages,\r\n        chatuserlist,\r\n        fromId,\r\n        toId,\r\n        handleFromidchange,\r\n        handleToidchange,\r\n        sendMessage,\r\n        clearMessages,\r\n        getchatuserlist,\r\n    } = useChat();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n\r\n    const bodyRef = useRef(null);\r\n\r\n    const displayStatus = (s) => {\r\n        if (s.msg) {\r\n            const { type, msg } = s;\r\n            const content = {\r\n                content: msg,\r\n                duration: 0.5,\r\n            };\r\n\r\n            switch (type) {\r\n                case \"success\":\r\n                    message.success(content);\r\n                    break;\r\n                case \"info\":\r\n                    message.info(content);\r\n                    break;\r\n                case \"danger\":\r\n                default:\r\n                    message.error(content);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App-chatscreen\">\r\n            <button onClick={getchatuserlist}> getchatuserlist </button>\r\n\r\n            <div className=\"App-title\">\r\n                <h1>Chat Room</h1>\r\n                <Button type=\"primary\" danger onClick={clearMessages}>\r\n                    Clear\r\n                </Button>\r\n            </div>\r\n\r\n            <p> From Id : {fromId}</p>\r\n            <p> To Id : {toId}</p>\r\n            <div className=\"App-messages\">\r\n                {messages.length === 0 ? (\r\n                    <p style={{ color: \"#ccc\" }}>{opened ? \"No messages...\" : \"Loading...\"}</p>\r\n                ) : (\r\n                    messages.map((message, i) =>\r\n                        message.fromId === fromId ? (\r\n                            <p className=\"App-message\" key={i}>\r\n                                <Tag color=\"blue\">{fromId + \":\"}</Tag> {message.body}\r\n                            </p>\r\n                        ) : (\r\n                            <p className=\"App-message\" key={i}>\r\n                                <Tag color=\"blue\">{message.fromId + \":\"} </Tag> {message.body}\r\n                            </p>\r\n                        )\r\n                    )\r\n                )}\r\n            </div>\r\n\r\n            {/* <Input\r\n        \r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        style={{ marginBottom: 10 }}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') {\r\n            bodyRef.current.focus()\r\n          }\r\n        }}\r\n      ></Input> */}\r\n            <div className=\"control\">\r\n                <select onChange={(e) => handleToidchange(e.target.value)}>\r\n                    {chatuserlist.map((chatuser, i) => {\r\n                        return <option key={i}>{chatuser.id}</option>;\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"control\">\r\n                <select onChange={(e) => handleFromidchange(e.target.value)}>\r\n                    {chatuserlist.map((chatuser, i) => {\r\n                        return <option key={i}>{chatuser.id}</option>;\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <Input.Search\r\n                rows={4}\r\n                value={body}\r\n                ref={bodyRef}\r\n                enterButton=\"Send\"\r\n                onChange={(e) => setBody(e.target.value)}\r\n                placeholder=\"Type a message here...\"\r\n                onSearch={(msg) => {\r\n                    // if (!msg || !username) {\r\n                    //   displayStatus({\r\n                    //     type: 'error',\r\n                    //     msg: 'Please enter a username and a message body.'\r\n                    //   })\r\n                    //   return\r\n                    // }\r\n\r\n                    sendMessage({ fromId: fromId, toId: toId, body: body });\r\n                    setBody(\"\");\r\n                }}\r\n            ></Input.Search>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatscreen;\r\n","C:\\Users\\user\\Desktop\\Nodejs_environment\\Final_project_chatdebug\\109-1-Web-Project\\frontend\\src\\container\\chatscreen\\useChat.js",["135","136","137"],"import { useState } from \"react\";\r\n// import { w3cwebsocket as W3CWebSocket } from 'websocket'\r\n\r\n// const client = new W3CWebSocket('ws://localhost:4000')\r\nconst client = new WebSocket(\"ws://localhost:4000\");\r\n\r\nconst useChat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [status, setStatus] = useState({});\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    // const chatuser1 = { id:\"3\"}\r\n    // const chatuser2 = { id:\"891206\"}\r\n    // const chatuser3 = { id: \"123\"}\r\n\r\n    const [chatuserlist, setChatuserlist] = useState([]);\r\n    const [chatuserid, setChatuserid] = useState(\"\");\r\n    const [fromId, setFromId] = useState(\"111\");\r\n    const [toId, setToId] = useState(\"\");\r\n\r\n    const handleToidchange = (newid) => {\r\n        //setChatuserid(newid)\r\n        setToId(newid);\r\n    };\r\n    const handleFromidchange = (newid) => {\r\n        setFromId(newid);\r\n    };\r\n\r\n    const getchatuserlist = () => {\r\n        //console.log(\"getchatuserlist\")\r\n        sendData([\"getchatuserlist\", { fromId: fromId }]);\r\n    };\r\n\r\n    client.onmessage = (message) => {\r\n        const { data } = message;\r\n        const [task, payload] = JSON.parse(data);\r\n        //console.log(task, payload)\r\n        switch (task) {\r\n            case \"initMsg\": {\r\n                setMessages(() => payload);\r\n                break;\r\n            }\r\n            case \"resOfSendMessage\": {\r\n                setMessages((messages) => [...messages, ...payload]);\r\n\r\n                break;\r\n            }\r\n            case `broadcast${fromId}`: {\r\n                setMessages((messages) => [...messages, ...payload]);\r\n\r\n                break;\r\n            }\r\n            case \"initchatuserlist\": {\r\n                console.log(\"initchatuserlist\");\r\n                console.log(payload);\r\n                setChatuserlist(payload);\r\n            }\r\n            case \"status\": {\r\n                setStatus(payload);\r\n                //console.log('status')\r\n                break;\r\n            }\r\n            case \"cleared\": {\r\n                //console.log('cleared')\r\n                setMessages([]);\r\n                break;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const sendData = (data) => {\r\n        // TODO\r\n        client.send(JSON.stringify(data));\r\n    };\r\n\r\n    const sendMessage = (msg) => {\r\n        sendData([\"messageInput\", msg]);\r\n    };\r\n\r\n    //console.log('frontend intoChat 1')\r\n    client.onopen = () => {\r\n        //console.log('frontend intoChat 2')\r\n        setOpened(true);\r\n        sendData([\"intoChat\", { msg: \"intoChatInit\" }]);\r\n    };\r\n\r\n    const clearMessages = () => {\r\n        // TODO\r\n        client.send(JSON.stringify([\"clear\", \"\"]));\r\n    };\r\n\r\n    return {\r\n        status,\r\n        opened,\r\n        messages,\r\n\r\n        chatuserlist,\r\n        fromId,\r\n        toId,\r\n        handleFromidchange,\r\n        handleToidchange,\r\n\r\n        sendMessage,\r\n        clearMessages,\r\n\r\n        getchatuserlist,\r\n    };\r\n};\r\n\r\nexport default useChat;\r\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":23},{"ruleId":"142","severity":1,"message":"146","line":12,"column":50,"nodeType":"144","messageId":"145","endLine":12,"endColumn":54},{"ruleId":"142","severity":1,"message":"147","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"148","line":51,"column":9,"nodeType":"144","messageId":"145","endLine":51,"endColumn":31},{"ruleId":"142","severity":1,"message":"147","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"149","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":17},{"ruleId":"142","severity":1,"message":"150","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"151","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":18},{"ruleId":"142","severity":1,"message":"152","line":15,"column":12,"nodeType":"144","messageId":"145","endLine":15,"endColumn":19},{"ruleId":"142","severity":1,"message":"153","line":16,"column":12,"nodeType":"144","messageId":"145","endLine":16,"endColumn":16},{"ruleId":"142","severity":1,"message":"154","line":73,"column":11,"nodeType":"144","messageId":"145","endLine":73,"endColumn":16},{"ruleId":"142","severity":1,"message":"155","line":77,"column":19,"nodeType":"144","messageId":"145","endLine":77,"endColumn":24},{"ruleId":"142","severity":1,"message":"156","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":1,"column":41,"nodeType":"144","messageId":"145","endLine":1,"endColumn":50},{"ruleId":"142","severity":1,"message":"151","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":18},{"ruleId":"142","severity":1,"message":"157","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":27},{"ruleId":"142","severity":1,"message":"158","line":9,"column":12,"nodeType":"144","messageId":"145","endLine":9,"endColumn":24},{"ruleId":"142","severity":1,"message":"156","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":1,"column":33,"nodeType":"144","messageId":"145","endLine":1,"endColumn":42},{"ruleId":"142","severity":1,"message":"159","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"160","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":18},{"ruleId":"142","severity":1,"message":"151","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"157","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":27},{"ruleId":"142","severity":1,"message":"161","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":30},{"ruleId":"142","severity":1,"message":"162","line":17,"column":12,"nodeType":"144","messageId":"145","endLine":17,"endColumn":23},{"ruleId":"142","severity":1,"message":"163","line":18,"column":20,"nodeType":"144","messageId":"145","endLine":18,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":30,"column":9,"nodeType":"166","messageId":"167","endLine":75,"endColumn":10},{"ruleId":"142","severity":1,"message":"168","line":49,"column":25,"nodeType":"144","messageId":"145","endLine":49,"endColumn":28},{"ruleId":"142","severity":1,"message":"169","line":70,"column":25,"nodeType":"144","messageId":"145","endLine":70,"endColumn":27},{"ruleId":"142","severity":1,"message":"170","line":70,"column":29,"nodeType":"144","messageId":"145","endLine":70,"endColumn":33},{"ruleId":"142","severity":1,"message":"171","line":78,"column":11,"nodeType":"144","messageId":"145","endLine":78,"endColumn":19},{"ruleId":"142","severity":1,"message":"172","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"159","line":4,"column":16,"nodeType":"144","messageId":"145","endLine":4,"endColumn":26},{"ruleId":"142","severity":1,"message":"173","line":16,"column":9,"nodeType":"144","messageId":"145","endLine":16,"endColumn":14},{"ruleId":"142","severity":1,"message":"174","line":19,"column":9,"nodeType":"144","messageId":"145","endLine":19,"endColumn":18},{"ruleId":"142","severity":1,"message":"175","line":27,"column":11,"nodeType":"144","messageId":"145","endLine":27,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":146,"column":1,"nodeType":"178","messageId":"179","endLine":153,"endColumn":2},{"ruleId":"142","severity":1,"message":"172","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"180","line":2,"column":20,"nodeType":"144","messageId":"145","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"159","line":4,"column":16,"nodeType":"144","messageId":"145","endLine":4,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":69,"column":1,"nodeType":"178","messageId":"179","endLine":76,"endColumn":2},{"ruleId":"142","severity":1,"message":"181","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"180","line":2,"column":19,"nodeType":"144","messageId":"145","endLine":2,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":14,"column":5,"nodeType":"166","messageId":"167","endLine":32,"endColumn":6},{"ruleId":"142","severity":1,"message":"146","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"159","line":5,"column":16,"nodeType":"144","messageId":"145","endLine":5,"endColumn":26},{"ruleId":"142","severity":1,"message":"180","line":1,"column":19,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"182","line":11,"column":22,"nodeType":"144","messageId":"145","endLine":11,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":21,"column":5,"nodeType":"166","messageId":"167","endLine":37,"endColumn":6},{"ruleId":"142","severity":1,"message":"183","line":45,"column":17,"nodeType":"144","messageId":"145","endLine":45,"endColumn":20},{"ruleId":"138","replacedBy":"184"},{"ruleId":"140","replacedBy":"185"},{"ruleId":"142","severity":1,"message":"147","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"186","line":7,"column":9,"nodeType":"144","messageId":"145","endLine":7,"endColumn":15},{"ruleId":"142","severity":1,"message":"187","line":20,"column":12,"nodeType":"144","messageId":"145","endLine":20,"endColumn":20},{"ruleId":"142","severity":1,"message":"188","line":20,"column":22,"nodeType":"144","messageId":"145","endLine":20,"endColumn":33},{"ruleId":"142","severity":1,"message":"189","line":25,"column":11,"nodeType":"144","messageId":"145","endLine":25,"endColumn":24},{"ruleId":"142","severity":1,"message":"190","line":17,"column":12,"nodeType":"144","messageId":"145","endLine":17,"endColumn":22},{"ruleId":"142","severity":1,"message":"191","line":17,"column":24,"nodeType":"144","messageId":"145","endLine":17,"endColumn":37},{"ruleId":"192","severity":1,"message":"193","line":58,"column":13,"nodeType":"194","messageId":"195","endLine":62,"endColumn":14},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Uploadimagetest' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'reloadAccountinterface' is assigned a value but never used.","'CloseIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'IconButton' is defined but never used.","'likedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'swipe' is assigned a value but never used.","'index' is assigned a value but never used.","'useCallback' is defined but never used.","'SettingsRoundedIcon' is defined but never used.","'selectedFile' is assigned a value but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'imagebuffer' is assigned a value but never used.","'setTestid' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'_id' is assigned a value but never used.","'id' is assigned a value but never used.","'body' is assigned a value but never used.","'sendtest' is assigned a value but never used.","'useState' is defined but never used.","'photo' is assigned a value but never used.","'selectsex' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useRef' is defined but never used.","'set' is defined but never used.","'setSelectsexes' is assigned a value but never used.","'Sex' is assigned a value but never used.",["196"],["197"],"'status' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'displayStatus' is assigned a value but never used.","'chatuserid' is assigned a value but never used.","'setChatuserid' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]