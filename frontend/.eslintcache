[{"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/index.js":"1","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/App.js":"2","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/reportWebVitals.js":"3","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Header.js":"4","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Card.js":"5","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/userinfo/userinfo.js":"6","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js":"7","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/client.js":"8","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js":"9","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js":"10","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js":"11","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js":"12","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js":"13","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js":"14"},{"size":510,"mtime":1610978173486,"results":"15","hashOfConfig":"16"},{"size":1726,"mtime":1611070042944,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610976336260,"results":"18","hashOfConfig":"16"},{"size":2093,"mtime":1611077275830,"results":"19","hashOfConfig":"16"},{"size":4665,"mtime":1611069894252,"results":"20","hashOfConfig":"16"},{"size":2123,"mtime":1611065275955,"results":"21","hashOfConfig":"16"},{"size":1964,"mtime":1611069894253,"results":"22","hashOfConfig":"16"},{"size":138,"mtime":1610978173485,"results":"23","hashOfConfig":"16"},{"size":2674,"mtime":1611128807565,"results":"24","hashOfConfig":"16"},{"size":1811,"mtime":1611129006178,"results":"25","hashOfConfig":"16"},{"size":3959,"mtime":1611069894254,"results":"26","hashOfConfig":"16"},{"size":2144,"mtime":1611069894253,"results":"27","hashOfConfig":"16"},{"size":2166,"mtime":1611069894254,"results":"28","hashOfConfig":"16"},{"size":1573,"mtime":1611069894253,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5iz52u",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/index.js",[],["68","69"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/App.js",["70"],"import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\n\nimport Accountinterface from \"./container/accountinterface/accountinterface\"\nimport Useriinfo from \"./container/userinfo/userinfo\"\nimport Chatscreen  from \"./container/chatscreen/chatscreen\"\n\n\nimport Loginpage from \"./container/login/loginipage/loginpage\"\nimport Signuppage from \"./container/login/signuppage/signuppage\"\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Card from \"./Card\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/chats/:person\">\n                        <Header mode=\"chat\" backButton=\"/chats\" />\n                    </Route>\n                    <Route path=\"/chats\">\n                        <Header mode=\"chat\" backButton=\"/\" />\n                        <Chatscreen/>\n                    </Route>\n                    <Route path=\"/accounts\">\n                        <Header mode=\"account\" backButton=\"/\" />\n                        <Accountinterface />\n                    </Route>\n\n                    <Route exact path=\"/\">\n                        <Header />\n                        <Card/>\n                    </Route>\n\n                    <Route path=\"/userinfo\">\n                        <Useriinfo />\n                    </Route>\n\n                    <Route exact path=\"/loginpage\">\n                        <Loginpage/> \n                    </Route>\n\n                    <Route exact path=\"/signuppage\">\n                        <Signuppage/> \n                    </Route>\n                    \n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/reportWebVitals.js",[],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Header.js",["71"],"import React from \"react\";\nimport \"./Header.css\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\"; //account button\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\"; //chat button\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\"; //return button\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\"; //return button\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\"; //main page button\n\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Header({ mode, backButton }) {\n    const history = useHistory();\n    return (\n        <div className=\"header\">\n            \n            {mode === \"chat\" ? (\n                <IconButton onClick={() => history.replace(backButton)}>\n                    <ArrowBackIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                </IconButton>\n            ) : (\n                <Link to=\"/accounts\">\n                    <IconButton>\n                        <AccountCircleOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                    </IconButton>\n                </Link>\n            )}\n\n            <Link to=\"/\">\n                <IconButton>\n                    <FavoriteTwoToneIcon style={{ fontSize: 45 }} color=\"secondary\" className=\"header__logo\" />\n                </IconButton>\n            </Link>\n\n            {mode === \"account\" ? (\n                <IconButton onClick={() => history.replace(backButton)}>\n                    <ArrowForwardIosOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\n                </IconButton>\n            ) : (\n                <Link to=\"/chats\">\n                    <IconButton>\n                        <ForumOutlinedIcon className=\"header__icon\" fontSize=\"large\" />\n                    </IconButton>\n                </Link>\n            )}\n            \n        </div>\n    );\n}\n\nexport default Header;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/Card.js",["72","73","74","75","76","77"],"import React, { useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Card.css\";\nimport client from \"./client\";\nconst alreadyRemoved = new Set();\n\nconst Card = () => {\n    const [people, setPeople] = useState([]);\n    const [likedBy, setLikedBy] = useState([]);\n    const [like, setLike] = useState([]);\n    const [opened, setOpened] = useState(false);\n    const [lastDirection, setLastDirection] = useState();\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"initCard\": {\n                setPeople(() => payload);\n                break;\n            }\n            case \"updateCard\": {\n                setPeople(() => [...people, ...payload]);\n                break;\n            }\n            case \"likeList\": {\n                setLike(() => payload);\n                console.log(like);\n            }\n            case \"likedByList\": {\n                setLikedBy(() => payload);\n                console.log(likedBy);\n            }\n            default:\n                break;\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    const outOfFrame = (id) => {\n        console.log(id + \" left the screen!\");\n    };\n\n    const swiped = (direction, idToDelete) => {\n        console.log(\"removing: \" + idToDelete);\n        setLastDirection(direction);\n        alreadyRemoved.add(idToDelete);\n        console.log(alreadyRemoved);\n        if (direction === \"left\") {\n            addDislike(idToDelete);\n        }\n        if (direction === \"right\") {\n            addLike(idToDelete);\n        }\n    };\n\n    const swipe = (dir) => {\n        const cardsLeft = people.filter((person) => !alreadyRemoved.has(person.name));\n        if (cardsLeft.length) {\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].id; // Find the card object to be removed\n            const index = people.map((person) => person.id).indexOf(toBeRemoved); // Find the index of which to make the reference to\n            alreadyRemoved.add(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n        }\n    };\n\n    const addLike = (id) => {\n        //swipe(\"right\");\n        sendData([\"like\", { id: id }]);\n    };\n\n    const addDislike = (id) => {\n        //swipe(\"left\");\n        sendData([\"dislike\", { id: id }]);\n    };\n\n    const SwipeButtons = () => {\n        return (\n            <div className=\"swipeButtons\">\n                <IconButton className=\"swipeButtons__left\" onClick={swipe(\"left\")}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n                <IconButton className=\"swipeButtons__right\" onClick={swipe(\"right\")}>\n                    <FavoriteIcon fontSize=\"large\" />\n                </IconButton>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"cardContainer\">\n                {people ? (\n                    people.map((person) =>\n                        alreadyRemoved.has(person.id) ? (\n                            console.log(\"skip\")\n                        ) : (\n                            <TinderCard\n                                className=\"swipe\"\n                                key={person.name}\n                                onSwipe={(dir) => swiped(dir, person.id)}\n                                preventSwipe={[\"up\", \"down\"]}\n                                onCardLeftScreen={() => outOfFrame(person.id)}\n                            >\n                                <div\n                                    style={{\n                                        backgroundImage: person.photo\n                                            ? `url(${person.photo})`\n                                            : `url(https://i.pinimg.com/originals/7a/98/1d/7a981de80cfa0a7aa92f5d523d3509cc.jpg)`,\n                                    }}\n                                    className=\"card\"\n                                >\n                                    <h3>{person.name}</h3>\n                                </div>\n                            </TinderCard>\n                        )\n                    )\n                ) : (\n                    <h3>no other user left...</h3>\n                )}\n            </div>\n            <div className=\"swipeButtonContainer\">\n                <SwipeButtons />\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/userinfo/userinfo.js",["78","79","80","81","82"],"import { useCallback, useState, useRef, useEffect } from 'react'\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';// setting button\n\nconst client = new WebSocket('ws://localhost:4000')\n\nfunction Userinfo(){ \n    const [selectedFile, setSelectedFile] = useState(null)\n    const [filedata,setFiledata] = useState(null)\n\n    const selectfilebtnRef = useRef( {} );\n\n    const sendData = (data) => {\n        client.send(JSON.stringify( data ))\n    }\n    \n    const sendFile = (file)=>{// actually send image\n        sendData(  [\"sendfile\",file])\n    }\n\n    const fileselectedHandler = async(event)=>{\n        //console.log(event.target.files[0])\n        //setSelectedFile(event.target.files[0])\n        event.preventDefault();\n        let reader = new FileReader();\n        let file = event.target.files[0];\n        reader.onloadend = () =>{\n            setSelectedFile(file)\n            setFiledata(reader.result)\n        }\n        reader.readAsDataURL(file);\n    }\n\n    const testclick = ()=>{\n        selectfilebtnRef.current.click();\n        console.log(\"clicks\")\n    }\n\n\n    const fileUploadHandler = ()=>{\n        console.log('Filedata: ',filedata)\n        //console.log(selectedFile)\n        //console.log(\"clicks\")\n        if (!filedata) {\n            console.log('filedata not found')\n            return };\n        sendFile({\"filedata\": filedata})\n        console.log(\"done\")\n        setSelectedFile(null)\n        setFiledata(null)\n        selectfilebtnRef.current.value=null;\n\n        \n    };\n\n    return(\n        <div className=\"App-userinfo\">\n            <input \n              style={{display: 'none'}} \n              type=\"file\" \n              onChange={(e)=> fileselectedHandler(e)}\n              ref={selectfilebtnRef}\n              />\n            \n            <button onClick={testclick}>Pick files </button>\n            <button onClick={fileUploadHandler}>Upload </button>\n\n            {filedata? <img src={filedata} className='rounded mx-auto d-block' alt='figure' /> : null}\n        </div>\n    )\n    \n\n\n}\n\n\n\n\nexport default Userinfo;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/accountinterface/accountinterface.js",["83","84","85","86"],"import { useCallback, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\"; // setting button\n\nconst client = new WebSocket(\"ws://localhost:4000\");\n\nfunction Accountinterface() {\n    const [imagebuffer, setImagebuffer] = useState(null);\n\n    client.onmessage = (message) => {\n        const { data } = message;\n        const [task, payload] = JSON.parse(data);\n\n        switch (task) {\n            case \"Image\": {\n                console.log(\"receive: Image\");\n                const { imagebuffer } = payload; // {imagebuffer:image.buffer}\n                setImagebuffer(imagebuffer);\n\n                break;\n            }\n        }\n    };\n\n    const sendData = (data) => {\n        client.send(JSON.stringify(data));\n    };\n\n    var Hi_url = \"60040f3741ef153e7cd5e71f\";\n    //sendData(['getImageByID',{_id: Hi_url}])\n    const getphoto = async () => {\n        sendData([\"getImageByID\", { ImageID: Hi_url }]);\n        console.log(imagebuffer);\n    };\n\n    return (\n        <div className=\"App-accountinterface\">\n            <div className=\"profile\">\n                {/*imagebuffer? <img src={imagebuffer} className='rounded mx-auto d-block' alt='figure' /> : null*/}\n            </div>\n            <div className=\"setting\">\n                <Link to=\"/loginpage\">\n                    <IconButton>\n                        <SettingsRoundedIcon style={{ fontSize: 40 }} className=\"header__logo\" />\n                    </IconButton>\n                </Link>\n                {imagebuffer ? (\n                    <img src={imagebuffer} className=\"rounded mx-auto d-block\" alt=\"figure\" />\n                ) : (\n                    <p>imagebuffer is null</p>\n                )}\n            </div>\n\n            <button onClick={getphoto}> get photo</button>\n        </div>\n    );\n}\n\nexport default Accountinterface;\n","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/client.js",[],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/chatscreen.js",["87","88"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/chatscreen/useChat.js",["89","90","91"],"/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/signuppage.js",["92","93","94","95","96"],"import React from 'react';\nimport { useState, useRef} from 'react'\nimport useSignUpForm from './CustomHooks';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from 'react-router'\n\nconst Signuppage = () => {\n  const signup = () => {\n//     alert(`User Created! \n// Name: ${inputs.Name}\n// Sex: ${inputs.Sex}`);\n  }\n  const {inputs, photo, photodata, toHomePage, handleInputChange, handlePhotoInputChange, handleSubmit} = useSignUpForm({Name: '', Sex: '', id: '', password1: '', password2: ''}, signup);\n  const selectfilebtnRef = useRef( {} );\n  const clickselectphoto = ()=>{\n    //selectfilebtnRef.current.click();\n    console.log(\"clickselectphoto\")\n}\n  return (\n    toHomePage?<Redirect to='/'/>:\n    <div className=\"section is-fullheight\">\n      <div className=\"container\">\n        <div className=\"column is-4 is-offset-4\">\n          <div className=\"box\">\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Name</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"Name\" onChange={handleInputChange} value={inputs.Name} required />\n                </div>\n              </div>\n              \n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Sex</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"Sex\" onChange={handleInputChange} value={inputs.Sex} required />\n                </div>\n              </div>\n              \n              <div className=\"field\">\n                <label className=\"label has-text-centered\">id</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"id\" onChange={handleInputChange} value={inputs.id} required />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Password</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"password\" name=\"password1\" onChange={handleInputChange} value={inputs.password1}/>\n                </div>\n              </div>\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Re-enter Password</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"password\" name=\"password2\" onChange={handleInputChange} value={inputs.password2}/>\n                </div>\n              </div>\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Photo</label>\n                <div className=\"control\">\n                  <input className=\"input\" \n                    style={{display: ''}}\n                    type=\"file\"  \n                    onChange={handlePhotoInputChange}\n                    ref={selectfilebtnRef}\n                  /> \n                  {/*<button className=\"btn_for_select_photo\" onClick={clickselectphoto}>Pick Photo </button>*/}\n                </div>\n              </div>\n              <button className=\"button is-block is-fullwidth is-success\" type=\"submit\">Sign Up</button>\n              <p>Has no account?</p> \n              <Link to=\"/loginpage\">\n                    <button>Log in Page</button>\n              </Link>\n            </form>\n            {photodata? <img src={photodata} className='rounded mx-auto d-block' alt='figure' /> : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Signuppage;\n\n\n{/* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */}","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/loginpage.js",["97","98","99","100"],"import React from 'react';\nimport { useState, useRef} from 'react'\nimport useLoginForm from './CustomHooksforloginpage';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Redirect } from 'react-router'\n\nconst Loginpage = () => {\n  const login = () => {\n//     alert(`User Created! \n// Name: ${inputs.Name}\n// Sex: ${inputs.Sex}`);\n  }\n  \n  const {inputs,toHomePage, handleInputChange, handleSubmit} = useLoginForm({id: '', password: ''}, login);\n  \n  return (\n    toHomePage?<Redirect to='/'/>:\n    <div className=\"section is-fullheight\">\n      <div className=\"container\">\n        <div className=\"column is-4 is-offset-4\">\n          <div className=\"box\">\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n              \n              \n              <div className=\"field\">\n                <label className=\"label has-text-centered\">id</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" name=\"id\" onChange={handleInputChange} value={inputs.id} required />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label has-text-centered\">Password</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"password\" name=\"password\" onChange={handleInputChange} value={inputs.password}/>\n                </div>\n              </div>\n              \n              \n              <button className=\"button is-block is-fullwidth is-success\" type=\"submit\">Log in</button> \n              <p>Has no account?</p> \n              <Link to=\"/signuppage\">\n                    <button>Sign up Page</button>\n              </Link>\n            </form>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Loginpage;\n\n\n{/* <div className=\"field\">\n                <label className=\"label has-text-centered\">Email Address</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" name=\"email\" onChange={handleInputChange} value={inputs.email} required />\n                </div>\n              </div> */}","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/signuppage/CustomHooks.js",["101","102"],"import {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useSignUpForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [photo, setPhoto] = useState(null)\n  const [photodata, setPhotodata] = useState(null)\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_signup\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n            if (msg===\"Sign up sucessfully\"){\n              setToHomePage(true)\n            }\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserSignup = (userinfo,photodata)=> {\n    let { Name, Sex, id, password1 } = userinfo;\n    let userdata={ \"name\":Name, \"sex\": Sex, \"id\":id, \"password\": password1, \"photodata\": photodata}\n    sendData(  [\"setUser\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs,photodata)\n\n    // await searchid(inputs.id);\n\n\n    sendUserSignup(inputs,photodata)\n\n    console.log(\"her777777e\")\n    setInputs(initialValues)\n    setPhoto(null)\n    setPhotodata(null)\n\n\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  const handlePhotoInputChange = (event) => {\n    event.persist();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    reader.onloadend = () =>{\n      setPhoto(file)\n      setPhotodata(reader.result)\n    }\n    reader.readAsDataURL(file);\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    handlePhotoInputChange,\n    inputs,\n    photo,\n    photodata,\n    toHomePage\n  };\n}\nexport default useSignUpForm;","/Users/elephy/Desktop/Final_Project/109-1-Web-Project/frontend/src/container/login/loginipage/CustomHooksforloginpage.js",["103","104","105"],"import { set } from 'mongoose';\nimport {useState, useRef} from 'react';\nimport client from \"../../../client\";\n\nconst useLoginForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const [toHomePage, setToHomePage] = useState(false);\n  \n  \n  client.onmessage = (message) => {\n    const { data } = message;\n    const [task, payload] = JSON.parse(data);\n\n    switch (task) {\n        case \"response_for_login\": {\n            const {msg} = payload; \n            console.log(msg);\n            alert(`${msg}`);\n            // if(msg===\"Sign up sucessfully\"){\n            //   console.log(\"here\")\n            //   setInputs(initialValues)\n            //   setPhoto(null)\n            //   setPhotodata(null)\n            // }\n\n            if (msg===\"Welcome\"){\n              setToHomePage(true)\n            }\n\n            break;\n        }\n    }\n  };\n\n\n  const sendData = (data) => {\n    client.send(JSON.stringify(data));\n  };\n  const sendUserLogin = (userinfo)=> {\n    let { id, password} = userinfo;\n    let userdata={  \"id\":id, \"password\": password}\n    sendData(  [\"userLogin\",userdata])\n  }\n\n  const handleSubmit = async(event) => {\n    if (event) event.preventDefault();\n      callback();\n    console.log(inputs)\n    sendUserLogin(inputs)\n    setInputs(initialValues)\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  \n  return {\n    handleSubmit,\n    handleInputChange, \n    inputs,\n    toHomePage\n  };\n}\nexport default useLoginForm;",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":13,"column":50,"nodeType":"112","messageId":"113","endLine":13,"endColumn":54},{"ruleId":"110","severity":1,"message":"114","line":11,"column":8,"nodeType":"112","messageId":"113","endLine":11,"endColumn":27},{"ruleId":"110","severity":1,"message":"115","line":14,"column":12,"nodeType":"112","messageId":"113","endLine":14,"endColumn":18},{"ruleId":"110","severity":1,"message":"116","line":14,"column":20,"nodeType":"112","messageId":"113","endLine":14,"endColumn":29},{"ruleId":"110","severity":1,"message":"117","line":15,"column":12,"nodeType":"112","messageId":"113","endLine":15,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":34,"column":13,"nodeType":"120","messageId":"121","endLine":37,"endColumn":14},{"ruleId":"118","severity":1,"message":"122","line":38,"column":13,"nodeType":"120","messageId":"123","endLine":39,"endColumn":23},{"ruleId":"110","severity":1,"message":"124","line":68,"column":19,"nodeType":"112","messageId":"113","endLine":68,"endColumn":24},{"ruleId":"110","severity":1,"message":"125","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"110","severity":1,"message":"126","line":1,"column":41,"nodeType":"112","messageId":"113","endLine":1,"endColumn":50},{"ruleId":"110","severity":1,"message":"127","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":18},{"ruleId":"110","severity":1,"message":"114","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":27},{"ruleId":"110","severity":1,"message":"128","line":9,"column":12,"nodeType":"112","messageId":"113","endLine":9,"endColumn":24},{"ruleId":"110","severity":1,"message":"125","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"110","severity":1,"message":"126","line":1,"column":33,"nodeType":"112","messageId":"113","endLine":1,"endColumn":42},{"ruleId":"110","severity":1,"message":"129","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":16,"column":9,"nodeType":"132","messageId":"133","endLine":24,"endColumn":10},{"ruleId":"110","severity":1,"message":"134","line":11,"column":17,"nodeType":"112","messageId":"113","endLine":11,"endColumn":26},{"ruleId":"110","severity":1,"message":"135","line":12,"column":15,"nodeType":"112","messageId":"113","endLine":12,"endColumn":22},{"ruleId":"110","severity":1,"message":"136","line":24,"column":16,"nodeType":"112","messageId":"113","endLine":24,"endColumn":18},{"ruleId":"110","severity":1,"message":"137","line":24,"column":20,"nodeType":"112","messageId":"113","endLine":24,"endColumn":26},{"ruleId":"110","severity":1,"message":"138","line":24,"column":28,"nodeType":"112","messageId":"113","endLine":24,"endColumn":32},{"ruleId":"110","severity":1,"message":"139","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"129","line":4,"column":16,"nodeType":"112","messageId":"113","endLine":4,"endColumn":26},{"ruleId":"110","severity":1,"message":"140","line":13,"column":18,"nodeType":"112","messageId":"113","endLine":13,"endColumn":23},{"ruleId":"110","severity":1,"message":"141","line":15,"column":9,"nodeType":"112","messageId":"113","endLine":15,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":88,"column":1,"nodeType":"144","messageId":"145","endLine":93,"endColumn":25},{"ruleId":"110","severity":1,"message":"139","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"146","line":2,"column":20,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"129","line":4,"column":16,"nodeType":"112","messageId":"113","endLine":4,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":57,"column":1,"nodeType":"144","messageId":"145","endLine":62,"endColumn":25},{"ruleId":"110","severity":1,"message":"146","line":1,"column":19,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":14,"column":5,"nodeType":"132","messageId":"133","endLine":30,"endColumn":6},{"ruleId":"110","severity":1,"message":"147","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"146","line":2,"column":19,"nodeType":"112","messageId":"113","endLine":2,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":14,"column":5,"nodeType":"132","messageId":"133","endLine":32,"endColumn":6},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SettingsRoundedIcon' is defined but never used.","'opened' is assigned a value but never used.","'setOpened' is assigned a value but never used.","'lastDirection' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'index' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'selectedFile' is assigned a value but never used.","'useHistory' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setFromId' is assigned a value but never used.","'setToId' is assigned a value but never used.","'Id' is assigned a value but never used.","'fromId' is assigned a value but never used.","'toId' is assigned a value but never used.","'useState' is defined but never used.","'photo' is assigned a value but never used.","'clickselectphoto' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useRef' is defined but never used.","'set' is defined but never used.","no-global-assign","no-unsafe-negation"]
